##### ResetParentPointersInMemoryPool::visit(declaration = 0x7f87fab9d090 = SgClassDeclaration) declaration->get_parent() == NULL 
##### ResetParentPointersInMemoryPool::visit(declaration = 0x7f87fab9d330 = SgClassDeclaration) declaration->get_parent() == NULL 
##### ResetParentPointersInMemoryPool::visit(declaration = 0x7f87fab9d5d0 = SgClassDeclaration) declaration->get_parent() == NULL 
##### ResetParentPointersInMemoryPool::visit(declaration = 0x7f87fab9d870 = SgClassDeclaration) declaration->get_parent() == NULL 
##### ResetParentPointersInMemoryPool::visit(declaration = 0x7f87fabaa7d0 = SgClassDeclaration) declaration->get_parent() == NULL 
##### ResetParentPointersInMemoryPool::visit(declaration = 0x7f87fabaaa70 = SgClassDeclaration) declaration->get_parent() == NULL 
##### ResetParentPointersInMemoryPool::visit(declaration = 0x7f87fabaad10 = SgClassDeclaration) declaration->get_parent() == NULL 
##### ResetParentPointersInMemoryPool::visit(declaration = 0x7f87fabaafb0 = SgClassDeclaration) declaration->get_parent() == NULL 
##### WARNING: in FixupAstDefiningAndNondefiningDeclarations::visit() statement = 0x7f87fa91e2b8 = SgEnumDeclaration not in child list of scope = 0x7f87fb01a120 = SgGlobal 
##### WARNING: in FixupAstDefiningAndNondefiningDeclarations::visit() statement = 0x7f87fa91e2b8 = SgEnumDeclaration not in child list of scope = 0x7f87fb01a120 = SgGlobal 
##### WARNING: in FixupAstDefiningAndNondefiningDeclarations::visit() statement = 0x7f87fa91e2b8 = SgEnumDeclaration not in child list of scope = 0x7f87fb01a120 = SgGlobal 
<program>
<function name="CopyBlock" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<if linenum="29" conditional="block -&gt; read . box &gt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="3" writes="0"/>
<access offset="(id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="34" conditional="block -&gt; write . box &gt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="3" writes="0"/>
<access offset="(id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="46" conditional="dim_i == 1;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="47" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="48" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0)" dependentloopvar="(k,j)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0)" dependentloopvar="(k,j)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</if>
<if linenum="53" conditional="dim_i == 2;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="54" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="55" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0)" dependentloopvar="(k,j)" reads="1" writes="0"/>
<access offset="(1,0)" dependentloopvar="(k,j)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0)" dependentloopvar="(k,j)" reads="0" writes="1"/>
<access offset="(1,0)" dependentloopvar="(k,j)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</if>
<if linenum="62" conditional="dim_i == 4;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="63" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="64" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0)" dependentloopvar="(k,j)" reads="1" writes="0"/>
<access offset="(1,0)" dependentloopvar="(k,j)" reads="1" writes="0"/>
<access offset="(2,0)" dependentloopvar="(k,j)" reads="1" writes="0"/>
<access offset="(3,0)" dependentloopvar="(k,j)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0)" dependentloopvar="(k,j)" reads="0" writes="1"/>
<access offset="(1,0)" dependentloopvar="(k,j)" reads="0" writes="1"/>
<access offset="(2,0)" dependentloopvar="(k,j)" reads="0" writes="1"/>
<access offset="(3,0)" dependentloopvar="(k,j)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</if>
<if linenum="72" conditional="dim_j == 1;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="73" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="74" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0)" dependentloopvar="(k,i)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0)" dependentloopvar="(k,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</if>
<if linenum="79" conditional="dim_k == 1;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="80" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="81" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0)" dependentloopvar="(j,i)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0)" dependentloopvar="(j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</if>
<else iflinenum="79" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="87" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="88" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="89" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
</else>
<local name="read"/>
<local name="write"/>
<nonlocal name="level"/>
<nonlocal name="block"/>
</function>
<function name="MGBuild" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="num_ranks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numVectors" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="MGBuild" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="minCoarseGridDim" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="maxLevels" datatype="int" isConstant="false" accesstype="readwrite" reads="3" writes="1"/>
<scalar name="_timeStartMGBuild" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readwrite" reads="8" writes="1"/>
<scalar name="coarse_dim" datatype="int" isConstant="false" accesstype="readwrite" reads="9" writes="1"/>
<scalar name="doRestrict" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="3"/>
<scalar name="fine_box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="fine_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="fine_boxes_in_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<array name="nProcs" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="dim_i" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(level)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="boxes_in_i" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="box_dim" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="box_ghosts" component="" datatype="int" accesstype="writeonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<funccall linenum="826" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<if linenum="836" conditional="level &lt; maxLevels;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="845" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="maxLevels * sizeof(level_type *)"/>
</funccall>
<if linenum="846" conditional="all_grids -&gt; levels ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="846" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="846" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="852" conditional="maxLevels &lt; 2;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="877" conditional="fine_box_dim % 2 == 0 && fine_box_dim &gt; 8 && fine_box_dim / 2 &gt;= stencil_get_radius();" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="doRestrict" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="fine_box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_nProcs" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_boxes_in_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="nProcs" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="dim_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="boxes_in_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_dim" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_ghosts" component="" datatype="int" accesstype="readonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(level+-1)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<funccall linenum="877" name="" origname="stencil_get_radius" module="unknown" flops="unknown">
</funccall>
<if linenum="885" conditional="fine_boxes_in_i % 2 == 0 && fine_box_dim &gt;= stencil_get_radius();" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="doRestrict" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="fine_box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_nProcs" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_boxes_in_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="nProcs" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="dim_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="boxes_in_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_dim" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_ghosts" component="" datatype="int" accesstype="readonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(level+-1)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<funccall linenum="885" name="" origname="stencil_get_radius" module="unknown" flops="unknown">
</funccall>
<if linenum="893" conditional="coarse_dim != 1 && fine_dim_i == 2 * coarse_dim && fine_dim_i / 2 &gt;= stencil_get_radius();" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="doRestrict" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="fine_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="nProcs" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="dim_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="boxes_in_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_dim" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_ghosts" component="" datatype="int" accesstype="readonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(level+-1)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<funccall linenum="893" name="" origname="stencil_get_radius" module="unknown" flops="unknown">
</funccall>
<if linenum="901" conditional="coarse_dim != 1 && fine_dim_i == 4 * coarse_dim && fine_box_dim / 2 &gt;= stencil_get_radius();" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="coarse_dim" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="doRestrict" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="fine_box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_nProcs" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fine_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_boxes_in_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="nProcs" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="dim_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="boxes_in_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_dim" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_ghosts" component="" datatype="int" accesstype="readonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(level+-1)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<funccall linenum="901" name="" origname="stencil_get_radius" module="unknown" flops="unknown">
</funccall>
<if linenum="909" conditional="coarse_dim != 1 && fine_dim_i == 8 * coarse_dim && fine_box_dim / 2 &gt;= stencil_get_radius();" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="coarse_dim" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="doRestrict" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="fine_box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_nProcs" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fine_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_boxes_in_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="nProcs" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="dim_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="boxes_in_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_dim" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_ghosts" component="" datatype="int" accesstype="readonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(level+-1)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<funccall linenum="909" name="" origname="stencil_get_radius" module="unknown" flops="unknown">
</funccall>
<if linenum="917" conditional="fine_box_dim % 2 == 0 && fine_box_dim / 2 &gt;= stencil_get_radius();" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="doRestrict" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="fine_box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_nProcs" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fine_boxes_in_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="nProcs" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="dim_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="boxes_in_i" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_dim" component="" datatype="int" accesstype="writeonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<array name="box_ghosts" component="" datatype="int" accesstype="readonly">
<access offset="(level)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(level+-1)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<funccall linenum="917" name="" origname="stencil_get_radius" module="unknown" flops="unknown">
</funccall>
<if linenum="925" conditional="dim_i[level] &lt; minCoarseGridDim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="926" conditional="doRestrict;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<loop linenum="932" loopvar="level" lowerbound="1" upperbound="all_grids -> num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numVectors" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="type" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="14" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="2" writes="1"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<array name="nProcs" component="" datatype="int" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<array name="boxes_in_i" component="" datatype="int" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<array name="box_dim" component="" datatype="int" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<array name="box_ghosts" component="" datatype="int" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<funccall linenum="933" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="sizeof(level_type )"/>
</funccall>
<if linenum="934" conditional="all_grids -&gt; levels[level] ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="934" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="934" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<funccall linenum="935" name="" origname="create_level" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="boxes_in_i" argname="boxes_in_i[level]"/>
<arg paramname="box_dim" argname="box_dim[level]"/>
<arg paramname="box_ghosts" argname="box_ghosts[level]"/>
<arg paramname="numVectors" argname="all_grids -> levels[level - 1] -> numVectors"/>
<arg paramname="domain_boundary_condition" argname="all_grids -> levels[level - 1] -> boundary_condition . type"/>
<arg paramname="my_rank" argname="all_grids -> levels[level - 1] -> my_rank"/>
<arg paramname="num_ranks" argname="nProcs[level]"/>
</funccall>
</loop>
<funccall linenum="941" name="" origname="create_vectors" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[all_grids -> num_levels - 1]"/>
<arg paramname="numVectors" argname="all_grids -> levels[all_grids -> num_levels - 1] -> numVectors + IterativeSolver_NumVectors()"/>
</funccall>
<funccall linenum="941" name="" origname="IterativeSolver_NumVectors" module="unknown" flops="unknown">
</funccall>
<if linenum="945" conditional="all_grids -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="945" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="945" name="" origname="fflush" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
</funccall>
</if>
<funccall linenum="946" name="" origname="build_restriction" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
<arg paramname="restrictionType" argname="0"/>
</funccall>
<funccall linenum="947" name="" origname="build_restriction" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
<arg paramname="restrictionType" argname="1"/>
</funccall>
<funccall linenum="948" name="" origname="build_restriction" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
<arg paramname="restrictionType" argname="2"/>
</funccall>
<funccall linenum="949" name="" origname="build_restriction" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
<arg paramname="restrictionType" argname="3"/>
</funccall>
<funccall linenum="950" name="" origname="build_interpolation" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
</funccall>
<if linenum="951" conditional="all_grids -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="951" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="951" name="" origname="fflush" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
</funccall>
</if>
<if linenum="975" conditional="all_grids -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="975" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<loop linenum="976" loopvar="level" lowerbound="1" upperbound="all_grids -> num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="5" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<funccall linenum="977" name="" origname="rebuild_operator" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="fromLevel" argname="(level > 0?all_grids -> levels[level - 1] :((void *)0))"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
</funccall>
</loop>
<if linenum="979" conditional="all_grids -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="979" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<loop linenum="983" loopvar="level" lowerbound="0" upperbound="all_grids -> num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="type" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="must_subtract_mean" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="1"/>
<scalar name="alpha_is_zero" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
</array>
<funccall linenum="986" name="" origname="dot" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="id_a" argname="9"/>
<arg paramname="id_b" argname="9"/>
</funccall>
<if linenum="991" conditional="all_grids -&gt; levels[level] -&gt; boundary_condition . type == 0 &&(a == 0 || alpha_is_zero == 1);" adds="0" multiplies="0" divides="0" specials="0">
</if>
</loop>
<funccall linenum="995" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="nProcs"/>
<local name="dim_i"/>
<local name="boxes_in_i"/>
<local name="box_dim"/>
<local name="box_ghosts"/>
<nonlocal name="stdout"/>
<nonlocal name="stderr"/>
<nonlocal name="all_grids"/>
<nonlocal name="fine_grid"/>
</function>
<function name="MGDestroy" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<if linenum="1005" conditional="all_grids -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="1005" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="1005" name="" origname="fflush" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
</funccall>
</if>
<loop linenum="1006" loopvar="level" lowerbound="all_grids -> num_levels - 1" upperbound="0" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_recvs" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_sends" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="10" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="5" writes="0"/>
</array>
<loop linenum="1008" loopvar="i" lowerbound="0" upperbound="4 - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_recvs" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_sends" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="10" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(i)" reads="5" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="5" writes="0"/>
</array>
<if linenum="1009" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . num_recvs &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(i)" reads="4" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="4" writes="0"/>
</array>
<if linenum="1011" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . recv_buffers[0];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1011" name="" origname="FREE" module="unknown" flops="unknown">
<arg paramname="ptr" argname="all_grids -> levels[level] -> restriction[i] . recv_buffers[0]"/>
</funccall>
<if linenum="1012" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . recv_buffers;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1012" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . recv_buffers"/>
</funccall>
<if linenum="1013" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . recv_ranks;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1013" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . recv_ranks"/>
</funccall>
<if linenum="1014" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . recv_sizes;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1014" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . recv_sizes"/>
</funccall>
</if>
<if linenum="1016" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . num_sends &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(i)" reads="4" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="4" writes="0"/>
</array>
<if linenum="1018" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . send_buffers[0];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1018" name="" origname="FREE" module="unknown" flops="unknown">
<arg paramname="ptr" argname="all_grids -> levels[level] -> restriction[i] . send_buffers[0]"/>
</funccall>
<if linenum="1019" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . send_buffers;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1019" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . send_buffers"/>
</funccall>
<if linenum="1020" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . send_ranks;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1020" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . send_ranks"/>
</funccall>
<if linenum="1021" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . send_sizes;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1021" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . send_sizes"/>
</funccall>
</if>
<if linenum="1023" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . blocks[0];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1023" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . blocks[0]"/>
</funccall>
<if linenum="1024" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . blocks[1];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1024" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . blocks[1]"/>
</funccall>
<if linenum="1025" conditional="all_grids -&gt; levels[level] -&gt; restriction[i] . blocks[2];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1025" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> restriction[i] . blocks[2]"/>
</funccall>
</loop>
<if linenum="1033" conditional="all_grids -&gt; levels[level] -&gt; interpolation . num_recvs &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="4" writes="0"/>
</array>
<if linenum="1035" conditional="all_grids -&gt; levels[level] -&gt; interpolation . recv_buffers[0];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1035" name="" origname="FREE" module="unknown" flops="unknown">
<arg paramname="ptr" argname="all_grids -> levels[level] -> interpolation . recv_buffers[0]"/>
</funccall>
<if linenum="1036" conditional="all_grids -&gt; levels[level] -&gt; interpolation . recv_buffers;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1036" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . recv_buffers"/>
</funccall>
<if linenum="1037" conditional="all_grids -&gt; levels[level] -&gt; interpolation . recv_ranks;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1037" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . recv_ranks"/>
</funccall>
<if linenum="1038" conditional="all_grids -&gt; levels[level] -&gt; interpolation . recv_sizes;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1038" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . recv_sizes"/>
</funccall>
</if>
<if linenum="1040" conditional="all_grids -&gt; levels[level] -&gt; interpolation . num_sends &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="4" writes="0"/>
</array>
<if linenum="1042" conditional="all_grids -&gt; levels[level] -&gt; interpolation . send_buffers[0];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1042" name="" origname="FREE" module="unknown" flops="unknown">
<arg paramname="ptr" argname="all_grids -> levels[level] -> interpolation . send_buffers[0]"/>
</funccall>
<if linenum="1043" conditional="all_grids -&gt; levels[level] -&gt; interpolation . send_buffers;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1043" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . send_buffers"/>
</funccall>
<if linenum="1044" conditional="all_grids -&gt; levels[level] -&gt; interpolation . send_ranks;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1044" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . send_ranks"/>
</funccall>
<if linenum="1045" conditional="all_grids -&gt; levels[level] -&gt; interpolation . send_sizes;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1045" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . send_sizes"/>
</funccall>
</if>
<if linenum="1047" conditional="all_grids -&gt; levels[level] -&gt; interpolation . blocks[0];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1047" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . blocks[0]"/>
</funccall>
<if linenum="1048" conditional="all_grids -&gt; levels[level] -&gt; interpolation . blocks[1];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1048" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . blocks[1]"/>
</funccall>
<if linenum="1049" conditional="all_grids -&gt; levels[level] -&gt; interpolation . blocks[2];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1049" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="all_grids -> levels[level] -> interpolation . blocks[2]"/>
</funccall>
</loop>
<if linenum="1056" conditional="all_grids -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="1056" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<loop linenum="1059" loopvar="level" lowerbound="all_grids -> num_levels - 1" upperbound="0 + 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<funccall linenum="1060" name="" origname="destroy_level" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
</funccall>
</loop>
<if linenum="1062" conditional="all_grids -&gt; levels;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="1062" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="(all_grids -> levels)"/>
</funccall>
<nonlocal name="stdout"/>
<nonlocal name="all_grids"/>
</function>
<function name="MGPrintTiming" adds="0" multiplies="2" divides="1" specials="0">
<scalar name="Krylov_iterations" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="vcycles_from_this_level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="MGBuild" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="MGSolve" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="MGSolves_performed" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="SecondsPerCycle" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="writeread" reads="13" writes="15"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(fromLevel)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<if linenum="88" conditional="all_grids -&gt; my_rank != 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="89" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="90" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="90" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="90" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12d ""/>
<arg paramname="" argname="level - fromLevel"/>
</funccall>
</loop>
<funccall linenum="90" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="91" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="91" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<funccall linenum="91" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%10d^3 ""/>
<arg paramname="" argname="all_grids -> levels[level] -> dim . i"/>
</funccall>
</loop>
<funccall linenum="91" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="92" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="92" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<funccall linenum="92" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%10d^3 ""/>
<arg paramname="" argname="all_grids -> levels[level] -> box_dim"/>
</funccall>
</loop>
<funccall linenum="92" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="93" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="93" loopvar="level" lowerbound="fromLevel" upperbound="num_levels + 1 - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="93" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
</loop>
<funccall linenum="93" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="94" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="94" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="smooth" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="94" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="94" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="95" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="95" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="residual" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="95" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="95" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="96" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="96" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="apply_op" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="96" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="96" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="97" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="97" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="97" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="97" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="98" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="98" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="blas3" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="98" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="98" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="99" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="99" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="boundary_conditions" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="99" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="99" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="100" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="100" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="restriction_total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="100" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="100" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="101" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="101" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="restriction_local" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="101" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="101" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="109" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="109" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="interpolation_total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="109" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="109" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="110" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="110" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="interpolation_local" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="110" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="110" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="118" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="118" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="ghostZone_total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="118" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="118" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="119" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="119" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="ghostZone_local" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="119" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="119" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="130" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="130" loopvar="level" lowerbound="fromLevel" upperbound="num_levels + 1 - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="130" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
</loop>
<funccall linenum="130" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="131" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<loop linenum="131" loopvar="level" lowerbound="fromLevel" upperbound="num_levels - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="Total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fromLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="time" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<funccall linenum="131" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f ""/>
<arg paramname="" argname="time"/>
</funccall>
</loop>
<funccall linenum="131" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""%12.6f\n""/>
<arg paramname="" argname="total"/>
</funccall>
<funccall linenum="133" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="134" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname="" Total time in MGBuild %12.6f seconds\n""/>
<arg paramname="" argname="SecondsPerCycle *((double )all_grids -> timers . MGBuild)"/>
</funccall>
<funccall linenum="135" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname="" Total time in MGSolve %12.6f seconds\n""/>
<arg paramname="" argname="scale *((double )all_grids -> timers . MGSolve)"/>
</funccall>
<funccall linenum="136" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname="" number of v-cycles %12d\n""/>
<arg paramname="" argname="all_grids -> levels[fromLevel] -> vcycles_from_this_level / all_grids -> MGSolves_performed"/>
</funccall>
<funccall linenum="137" name="" origname="printf" module="unknown" flops="unknown">
<arg paramname="__format" argname=""Bottom solver iterations %12d\n""/>
<arg paramname="" argname="all_grids -> levels[all_grids -> num_levels - 1] -> Krylov_iterations / all_grids -> MGSolves_performed"/>
</funccall>
<funccall linenum="141" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="141" name="" origname="fflush" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
</funccall>
<nonlocal name="stdout"/>
<nonlocal name="all_grids"/>
</function>
<function name="MGResetTimers" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="MGSolve" datatype="double" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="MGSolves_performed" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="149" loopvar="level" lowerbound="0" upperbound="all_grids -> num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<funccall linenum="149" name="" origname="reset_level_timers" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
</funccall>
</loop>
<nonlocal name="all_grids"/>
</function>
<function name="MGSolve" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="active" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="MGSolve" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="MGSolves_performed" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="onLevel" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="u_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="F_id" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="e_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="R_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStartMGSolve" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_F" datatype="double" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(onLevel)" dependentloopvar="()" reads="3" writes="0"/>
</array>
<if linenum="1126" conditional="!all_grids -&gt; levels[onLevel] -&gt; active;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="1139" conditional="all_grids -&gt; levels[onLevel] -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="1139" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="1140" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<funccall linenum="1145" name="" origname="norm" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[onLevel]"/>
<arg paramname="id_a" argname="F_id"/>
</funccall>
<funccall linenum="1149" name="" origname="zero_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[onLevel]"/>
<arg paramname="id_a" argname="e_id"/>
</funccall>
<funccall linenum="1150" name="" origname="scale_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[onLevel]"/>
<arg paramname="id_c" argname="R_id"/>
<arg paramname="scale_a" argname="1.0"/>
<arg paramname="id_a" argname="F_id"/>
</funccall>
<loop linenum="1154" loopvar="v" lowerbound="0" upperbound="maxVCycles - 1" stride="1" adds="1" multiplies="0" divides="1" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="must_subtract_mean" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="vcycles_from_this_level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="onLevel" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="F_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="rtol" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="e_id" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="R_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="v" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="maxVCycles" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_F" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_residual" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeNorm" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(level)" dependentloopvar="()" reads="2" writes="0"/>
<access offset="(onLevel)" dependentloopvar="()" reads="2" writes="0"/>
</array>
<funccall linenum="1159" name="" origname="MGVCycle" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
<arg paramname="e_id" argname="e_id"/>
<arg paramname="R_id" argname="R_id"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
<arg paramname="level" argname="level"/>
</funccall>
<funccall linenum="1162" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<if linenum="1163" conditional="all_grids -&gt; levels[level] -&gt; must_subtract_mean == 1;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="e_id" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="average_value_of_e" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(level)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<funccall linenum="1164" name="" origname="mean" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="id_a" argname="e_id"/>
</funccall>
<funccall linenum="1165" name="" origname="shift_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="id_c" argname="e_id"/>
<arg paramname="id_a" argname="e_id"/>
<arg paramname="shift_a" argname="-average_value_of_e"/>
</funccall>
</if>
<funccall linenum="1167" name="" origname="residual" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[onLevel]"/>
<arg paramname="res_id" argname="0"/>
<arg paramname="x_id" argname="e_id"/>
<arg paramname="rhs_id" argname="F_id"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
</funccall>
<funccall linenum="1168" name="" origname="norm" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[onLevel]"/>
<arg paramname="id_a" argname="0"/>
</funccall>
<funccall linenum="1169" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<if linenum="1171" conditional="all_grids -&gt; levels[level] -&gt; my_rank == 0;" adds="0" multiplies="0" divides="1" specials="0">
<scalar name="v" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_F" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_residual" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="1173" conditional="v &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="v" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_residual" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rel" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="1173" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<else iflinenum="1173" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="v" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_residual" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rel" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="1174" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</else>
</if>
<if linenum="1176" conditional="norm_of_residual / norm_of_F &lt; rtol;" adds="0" multiplies="0" divides="0" specials="0">
</if>
</loop>
<funccall linenum="1179" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<if linenum="1186" conditional="all_grids -&gt; levels[onLevel] -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="1186" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<nonlocal name="stdout"/>
<nonlocal name="all_grids"/>
</function>
<function name="MGVCycle" adds="2" multiplies="0" divides="0" specials="0">
<scalar name="active" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Total" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="e_id" datatype="int" isConstant="false" accesstype="readonly" reads="7" writes="0"/>
<scalar name="R_id" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="13" writes="0"/>
<scalar name="_LevelStart" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="2"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(level)" dependentloopvar="()" reads="3" writes="0"/>
<access offset="(level+1)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<if linenum="1091" conditional="!all_grids -&gt; levels[level] -&gt; active;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="1095" conditional="level == all_grids -&gt; num_levels - 1;" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="Total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="e_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="R_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="_timeBottomStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(level)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<funccall linenum="1096" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<funccall linenum="1097" name="" origname="IterativeSolver" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="u_id" argname="e_id"/>
<arg paramname="f_id" argname="R_id"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
<arg paramname="desired_reduction_in_norm" argname="1e-3"/>
</funccall>
<funccall linenum="1098" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="1103" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<funccall linenum="1104" name="" origname="smooth" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="phi_id" argname="e_id"/>
<arg paramname="rhs_id" argname="R_id"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
</funccall>
<funccall linenum="1105" name="" origname="residual" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="res_id" argname="0"/>
<arg paramname="x_id" argname="e_id"/>
<arg paramname="rhs_id" argname="R_id"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
</funccall>
<funccall linenum="1106" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="all_grids -> levels[level + 1]"/>
<arg paramname="id_c" argname="R_id"/>
<arg paramname="level_f" argname="all_grids -> levels[level]"/>
<arg paramname="id_f" argname="0"/>
<arg paramname="restrictionType" argname="0"/>
</funccall>
<funccall linenum="1107" name="" origname="zero_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level + 1]"/>
<arg paramname="id_a" argname="e_id"/>
</funccall>
<funccall linenum="1108" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<funccall linenum="1111" name="" origname="MGVCycle" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
<arg paramname="e_id" argname="e_id"/>
<arg paramname="R_id" argname="R_id"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
<arg paramname="level" argname="level + 1"/>
</funccall>
<funccall linenum="1114" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<funccall linenum="1115" name="" origname="interpolation_vcycle" module="unknown" flops="unknown">
<arg paramname="level_f" argname="all_grids -> levels[level]"/>
<arg paramname="id_f" argname="e_id"/>
<arg paramname="prescale_f" argname="1.0"/>
<arg paramname="level_c" argname="all_grids -> levels[level + 1]"/>
<arg paramname="id_c" argname="e_id"/>
</funccall>
<funccall linenum="1116" name="" origname="smooth" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[level]"/>
<arg paramname="phi_id" argname="e_id"/>
<arg paramname="rhs_id" argname="R_id"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
</funccall>
<funccall linenum="1118" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<nonlocal name="all_grids"/>
</function>
<function name="add_vectors" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="6" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<funccall linenum="95" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="100" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_a" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_b" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(block)" reads="13" writes="0"/>
<access offset="(id_a)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(id_b)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(id_c)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="6" writes="0"/>
</array>
<loop linenum="116" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="117" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="118" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="1" multiplies="2" divides="0" specials="0">
<scalar name="scale_a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="scale_b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="grid_a" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="grid_b" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="grid_c" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="123" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="grid_c"/>
<local name="grid_a"/>
<local name="grid_b"/>
<nonlocal name="level"/>
</function>
<function name="apply_BCs_v1" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="type" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="boundary_conditions" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readwrite" reads="1" writes="1"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="3" writes="0"/>
<access offset="(shape)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(x_id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<if linenum="24" conditional="shape &gt;= 3;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="25" conditional="level -&gt; boundary_condition . type == 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="32" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="34" loopvar="buffer" lowerbound="0" upperbound="level -> boundary_condition . num_blocks[shape] - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readonly" reads="12" writes="0"/>
<scalar name="buffer" datatype="int" isConstant="false" accesstype="writeread" reads="13" writes="1"/>
<scalar name="scale" datatype="double" isConstant="false" accesstype="writeonly" reads="0" writes="3"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="normal" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="di" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dj" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dk" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="subtype" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0,shape)" dependentloopvar="(buffer,)" reads="14" writes="0"/>
<access offset="(0,0,shape)" dependentloopvar="(,buffer,)" reads="3" writes="0"/>
</array>
<array name="faces" component="" datatype="const int" accesstype="readonly">
<access offset="(0,0,shape)" dependentloopvar="(,buffer,)" reads="1" writes="0"/>
</array>
<array name="edges" component="" datatype="const int" accesstype="readonly">
<access offset="(0,0,shape)" dependentloopvar="(,buffer,)" reads="1" writes="0"/>
</array>
<array name="corners" component="" datatype="const int" accesstype="readonly">
<access offset="(0,0,shape)" dependentloopvar="(,buffer,)" reads="1" writes="0"/>
</array>
<if linenum="36" conditional="faces[level -&gt; boundary_condition . blocks[shape][buffer] . subtype];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="37" conditional="edges[level -&gt; boundary_condition . blocks[shape][buffer] . subtype];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="38" conditional="corners[level -&gt; boundary_condition . blocks[shape][buffer] . subtype];" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="61" conditional="dim_i == 1;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="62" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="63" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="stride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="x" component="" datatype="double" accesstype="readonly">
<access offset="(ilo+jlo+-jlo+klo+-klo)" dependentloopvar="(k,j)" reads="0" writes="1"/>
<access offset="(ilo+jlo+-jlo+klo+-klo+stride)" dependentloopvar="(k,j)" reads="1" writes="0"/>
</array>
</loop>
</loop>
</if>
<if linenum="67" conditional="dim_j == 1;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="68" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="69" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="stride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="x" component="" datatype="double" accesstype="readonly">
<access offset="(ilo+jlo*jStride+klo+-klo)" dependentloopvar="(k,i)" reads="0" writes="1"/>
<access offset="(ilo+jlo*jStride+klo+-klo+stride)" dependentloopvar="(k,i)" reads="1" writes="0"/>
</array>
</loop>
</loop>
</if>
<if linenum="73" conditional="dim_k == 1;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="74" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="75" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="stride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="x" component="" datatype="double" accesstype="readonly">
<access offset="(ilo+jlo+-jlo+klo*kStride)" dependentloopvar="(j,i)" reads="0" writes="1"/>
<access offset="(ilo+jlo+-jlo+klo*kStride+stride)" dependentloopvar="(j,i)" reads="1" writes="0"/>
</array>
</loop>
</loop>
</if>
<else iflinenum="73" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="80" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="81" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="82" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="scale" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="stride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="x" component="" datatype="double" accesstype="readonly">
<access offset="(ilo+jlo+-jlo+klo+-klo)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
<access offset="(ilo+jlo+-jlo+klo+-klo+stride)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
</loop>
</loop>
</loop>
</else>
</loop>
<funccall linenum="89" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="faces"/>
<local name="edges"/>
<local name="corners"/>
<local name="x"/>
<nonlocal name="level"/>
</function>
<function name="apply_BCs_v2" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="type" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="boundary_conditions" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readwrite" reads="1" writes="1"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="di" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dj" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dk" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="9" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="4" writes="0"/>
<access offset="(shape)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(x_id)" dependentloopvar="()" reads="2" writes="0"/>
</array>
<array name="xn" component="" datatype="double" accesstype="writeonly">
<access offset="(i+j*jStride+k*kStride)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<if linenum="104" conditional="shape &gt;= 3;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="105" conditional="level -&gt; boundary_condition . type == 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="106" conditional="level -&gt; box_dim &lt; 2;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="106" name="" origname="apply_BCs_v1" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="x_id" argname="x_id"/>
<arg paramname="shape" argname="shape"/>
</funccall>
</if>
<funccall linenum="113" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="115" loopvar="buffer" lowerbound="0" upperbound="level -> boundary_condition . num_blocks[shape] - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readonly" reads="9" writes="0"/>
<scalar name="box_ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="buffer" datatype="int" isConstant="false" accesstype="writeread" reads="10" writes="1"/>
<scalar name="subtype" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="subtype" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0,shape)" dependentloopvar="(buffer,)" reads="12" writes="0"/>
<access offset="(0,0,shape)" dependentloopvar="(,buffer,)" reads="4" writes="0"/>
</array>
<array name="faces" component="" datatype="const int" accesstype="readonly">
<access offset="(subtype)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="edges" component="" datatype="const int" accesstype="readonly">
<access offset="(subtype)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="corners" component="" datatype="const int" accesstype="readonly">
<access offset="(subtype)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<if linenum="134" conditional="box_ghosts &gt; 1;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="135" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="136" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="137" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="xn" component="" datatype="double" accesstype="writeonly">
<access offset="(ilo+jlo+-jlo+klo+-klo)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
</if>
<if linenum="143" conditional="faces[subtype];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="subtype" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="6" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="6" writes="0"/>
<scalar name="rStride" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="dim_r" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="rlo" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="sStride" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="dim_s" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="slo" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="t" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="tStride" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="6"/>
<scalar name="dt" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<loop linenum="163" loopvar="s" lowerbound="0" upperbound="dim_s - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="s" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_s" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="164" loopvar="r" lowerbound="0" upperbound="dim_r - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="r" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="rStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_r" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rlo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="s" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="slo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="tStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dt" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="x" component="" datatype="const double" accesstype="readonly">
<access offset="(rlo+-rlo+slo+-slo+t*tStride+2*dt)" dependentloopvar="(s,r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+slo+-slo+t*tStride+dt)" dependentloopvar="(s,r)" reads="1" writes="0"/>
</array>
<array name="xn" component="" datatype="double" accesstype="writeonly">
<access offset="(rlo+-rlo+slo+-slo+t*tStride)" dependentloopvar="(s,r)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</if>
<if linenum="169" conditional="edges[subtype];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="const int" isConstant="true" accesstype="readonly" reads="12" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="subtype" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="12" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="12" writes="0"/>
<scalar name="rStride" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="dim_r" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="rlo" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="s" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="sStride" datatype="int" isConstant="false" accesstype="writeread" reads="12" writes="12"/>
<scalar name="ds" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="t" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="tStride" datatype="int" isConstant="false" accesstype="writeread" reads="12" writes="12"/>
<scalar name="dt" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<loop linenum="200" loopvar="r" lowerbound="0" upperbound="dim_r - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="r" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="rStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_r" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rlo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="s" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ds" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="t" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="tStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dt" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<array name="x" component="" datatype="const double" accesstype="readonly">
<access offset="(rlo+-rlo+s*sStride+t*tStride+2*ds+2*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+2*ds+dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+ds+2*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+ds+dt)" dependentloopvar="(r)" reads="1" writes="0"/>
</array>
<array name="xn" component="" datatype="double" accesstype="writeonly">
<access offset="(rlo+-rlo+s*sStride+t*tStride)" dependentloopvar="(r)" reads="0" writes="1"/>
</array>
</loop>
</if>
<if linenum="208" conditional="corners[subtype];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="const int" isConstant="true" accesstype="readonly" reads="12" writes="0"/>
<scalar name="subtype" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="9" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="9" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="di" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="dj" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="dk" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<array name="x" component="" datatype="const double" accesstype="readonly">
<access offset="(-1+-1+1+-1+1+-1+-1+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+-1+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+2+-2+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+2+-2+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+-1+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+-1+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+2+-2+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+2+-2+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="xn" component="" datatype="double" accesstype="writeonly">
<access offset="(-1+-1+1+-1+1)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
</loop>
<funccall linenum="249" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="faces"/>
<local name="edges"/>
<local name="corners"/>
<local name="x"/>
<local name="xn"/>
<nonlocal name="level"/>
</function>
<function name="apply_BCs_v4" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="type" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="boundary_conditions" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readwrite" reads="1" writes="1"/>
<scalar name="box_dim" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="20" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="di" datatype="int" isConstant="false" accesstype="readonly" reads="68" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dj" datatype="int" isConstant="false" accesstype="readonly" reads="68" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dk" datatype="int" isConstant="false" accesstype="readonly" reads="68" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="72" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="4" writes="0"/>
<access offset="(shape)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(x_id)" dependentloopvar="()" reads="2" writes="0"/>
</array>
<if linenum="265" conditional="shape &gt;= 3;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="266" conditional="level -&gt; boundary_condition . type == 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="267" conditional="box_ghosts &lt; 2;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="267" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="267" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="269" conditional="box_dim &lt; 4;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="269" name="" origname="apply_BCs_v2" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="x_id" argname="x_id"/>
<arg paramname="shape" argname="shape"/>
</funccall>
</if>
<funccall linenum="276" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="278" loopvar="buffer" lowerbound="0" upperbound="level -> boundary_condition . num_blocks[shape] - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readonly" reads="9" writes="0"/>
<scalar name="box_ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="buffer" datatype="int" isConstant="false" accesstype="writeread" reads="10" writes="1"/>
<scalar name="subtype" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="subtype" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0,shape)" dependentloopvar="(buffer,)" reads="12" writes="0"/>
<access offset="(0,0,shape)" dependentloopvar="(,buffer,)" reads="4" writes="0"/>
</array>
<array name="faces" component="" datatype="const int" accesstype="readonly">
<access offset="(subtype)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="edges" component="" datatype="const int" accesstype="readonly">
<access offset="(subtype)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="corners" component="" datatype="const int" accesstype="readonly">
<access offset="(subtype)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<if linenum="299" conditional="box_ghosts &gt; 2;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="300" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="301" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="302" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="xn" component="" datatype="double" accesstype="writeonly">
<access offset="(ilo+jlo+-jlo+klo+-klo)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
</if>
<if linenum="308" conditional="faces[subtype];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="subtype" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="6" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="6" writes="0"/>
<scalar name="rStride" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="dim_r" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="rlo" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="sStride" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="dim_s" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="slo" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="t" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="6"/>
<scalar name="tStride" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="6"/>
<scalar name="dt" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="6"/>
<loop linenum="331" loopvar="s" lowerbound="0" upperbound="dim_s - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="s" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_s" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="332" loopvar="r" lowerbound="0" upperbound="dim_r - 1" stride="1" adds="6" multiplies="10" divides="0" specials="0">
<scalar name="OneTwelfth" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="r" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="rStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_r" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rlo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="s" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="slo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="tStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dt" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="x1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x2" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x3" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="x" component="" datatype="const double" accesstype="readonly">
<access offset="(rlo+-rlo+slo+-slo+t*tStride+2*dt)" dependentloopvar="(s,r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+slo+-slo+t*tStride+3*dt)" dependentloopvar="(s,r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+slo+-slo+t*tStride+4*dt)" dependentloopvar="(s,r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+slo+-slo+t*tStride+dt)" dependentloopvar="(s,r)" reads="1" writes="0"/>
</array>
<array name="ghost0" component="" datatype="double" accesstype="writeonly">
<access offset="(rlo+-rlo+slo+-slo+t*tStride)" dependentloopvar="(s,r)" reads="0" writes="1"/>
</array>
<array name="ghost1" component="" datatype="double" accesstype="writeonly">
<access offset="(rlo+-rlo+slo+-slo+t*tStride)" dependentloopvar="(s,r)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</if>
<if linenum="344" conditional="edges[subtype];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="const int" isConstant="true" accesstype="readonly" reads="12" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="subtype" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="12" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="12" writes="0"/>
<scalar name="rStride" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="dim_r" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="rlo" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="s" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="sStride" datatype="int" isConstant="false" accesstype="writeread" reads="12" writes="12"/>
<scalar name="ds" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="12"/>
<scalar name="t" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="12"/>
<scalar name="tStride" datatype="int" isConstant="false" accesstype="writeread" reads="12" writes="12"/>
<scalar name="dt" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="12"/>
<loop linenum="402" loopvar="r" lowerbound="0" upperbound="dim_r - 1" stride="1" adds="36" multiplies="60" divides="0" specials="0">
<scalar name="OneTwelfth" datatype="double" isConstant="false" accesstype="readonly" reads="12" writes="0"/>
<scalar name="r" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="rStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_r" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rlo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="s" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ds" datatype="int" isConstant="false" accesstype="readonly" reads="16" writes="0"/>
<scalar name="t" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="tStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dt" datatype="int" isConstant="false" accesstype="readonly" reads="16" writes="0"/>
<scalar name="x11" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x21" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x31" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x41" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x12" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x22" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x32" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x42" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x13" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x23" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x33" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x43" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x14" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x24" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x34" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x44" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n2" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n3" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f2" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f3" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="x" component="" datatype="const double" accesstype="readonly">
<access offset="(rlo+-rlo+s*sStride+t*tStride+2*ds+2*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+2*ds+3*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+2*ds+4*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+2*ds+dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+3*ds+2*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+3*ds+3*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+3*ds+4*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+3*ds+dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+4*ds+2*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+4*ds+3*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+4*ds+4*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+4*ds+dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+ds+2*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+ds+3*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+ds+4*dt)" dependentloopvar="(r)" reads="1" writes="0"/>
<access offset="(rlo+-rlo+s*sStride+t*tStride+ds+dt)" dependentloopvar="(r)" reads="1" writes="0"/>
</array>
<array name="ghost00" component="" datatype="double" accesstype="writeonly">
<access offset="(rlo+-rlo+s*sStride+t*tStride)" dependentloopvar="(r)" reads="0" writes="1"/>
</array>
<array name="ghost01" component="" datatype="double" accesstype="writeonly">
<access offset="(rlo+-rlo+s*sStride+t*tStride)" dependentloopvar="(r)" reads="0" writes="1"/>
</array>
<array name="ghost10" component="" datatype="double" accesstype="writeonly">
<access offset="(rlo+-rlo+s*sStride+t*tStride)" dependentloopvar="(r)" reads="0" writes="1"/>
</array>
<array name="ghost11" component="" datatype="double" accesstype="writeonly">
<access offset="(rlo+-rlo+s*sStride+t*tStride)" dependentloopvar="(r)" reads="0" writes="1"/>
</array>
</loop>
</if>
<if linenum="429" conditional="corners[subtype];" adds="168" multiplies="280" divides="0" specials="0">
<scalar name="f34" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f44" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nn1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nn2" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nn3" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nn4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nf1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nf2" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nf3" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nf4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fn1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fn2" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fn3" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fn4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ff1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ff2" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ff3" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ff4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="nnn" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="nnf" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="nfn" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="nff" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fnn" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fnf" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ffn" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fff" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="const int" isConstant="true" accesstype="readonly" reads="12" writes="0"/>
<scalar name="subtype" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="9" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="9" writes="0"/>
<scalar name="OneTwelfth" datatype="double" isConstant="false" accesstype="readonly" reads="56" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="di" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="dj" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="dk" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="8"/>
<scalar name="x144" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x244" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x344" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x444" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x134" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x234" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x334" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x434" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x124" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x224" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x324" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x424" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x114" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x214" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x314" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x414" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x143" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x243" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x343" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x443" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x133" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x233" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x333" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x433" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x123" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x223" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x323" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x423" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x113" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x213" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x313" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x413" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x142" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x242" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x342" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x442" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x132" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x232" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x332" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x432" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x122" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x222" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x322" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x422" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x112" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x212" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x312" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x412" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x141" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x241" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x341" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x441" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x131" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x231" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x331" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x431" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x121" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x221" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x321" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x421" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x111" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x211" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x311" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x411" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n11" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n21" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n31" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n41" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n12" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n22" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n32" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n42" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n13" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n23" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n33" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n43" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n14" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n24" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n34" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="n44" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f11" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f21" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f31" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f41" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f12" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f22" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f32" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f42" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f13" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f23" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f33" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f43" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f14" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f24" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="x" component="" datatype="const double" accesstype="readonly">
<access offset="(-1+-1+1+-1+1+-1+-1+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+-1+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+-1+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+-1+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+2+-2+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+2+-2+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+2+-2+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+2+-2+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+3+-3+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+3+-3+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+3+-3+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+3+-3+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+4+-4+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+4+-4+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+4+-4+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+-1+4+-4+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+-1+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+-1+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+-1+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+-1+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+2+-2+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+2+-2+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+2+-2+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+2+-2+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+3+-3+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+3+-3+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+3+-3+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+3+-3+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+4+-4+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+4+-4+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+4+-4+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+2+-2+4+-4+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+-1+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+-1+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+-1+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+-1+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+2+-2+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+2+-2+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+2+-2+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+2+-2+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+3+-3+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+3+-3+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+3+-3+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+3+-3+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+4+-4+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+4+-4+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+4+-4+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+3+-3+4+-4+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+-1+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+-1+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+-1+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+-1+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+2+-2+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+2+-2+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+2+-2+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+2+-2+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+3+-3+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+3+-3+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+3+-3+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+3+-3+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+4+-4+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+4+-4+2+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+4+-4+3+-3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1+-1+1+-1+1+4+-4+4+-4+4+-4)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="xn" component="" datatype="double" accesstype="writeonly">
<access offset="(-1+-1+1+-1+1)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(-1+-1+1+-1+1+1)" dependentloopvar="()" reads="0" writes="3"/>
<access offset="(-1+-1+1+-1+1+1+1)" dependentloopvar="()" reads="0" writes="3"/>
<access offset="(-1+-1+1+-1+1+1+1+1)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
</loop>
<funccall linenum="568" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="faces"/>
<local name="edges"/>
<local name="corners"/>
<local name="x"/>
<local name="xn"/>
<local name="ghost0"/>
<local name="ghost1"/>
<local name="ghost00"/>
<local name="ghost01"/>
<local name="ghost10"/>
<local name="ghost11"/>
<nonlocal name="stderr"/>
<nonlocal name="level"/>
</function>
<function name="apply_BCs" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="51" name="" origname="apply_BCs_v4" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="x_id" argname="x_id"/>
<arg paramname="shape" argname="shape"/>
</funccall>
<nonlocal name="level"/>
</function>
<function name="bench_hpgmg" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="55" loopvar="doTiming" lowerbound="0" upperbound="1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="onLevel" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rtol" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="doTiming" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="minSolves" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numSolves" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(onLevel)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<if linenum="69" conditional="all_grids -&gt; levels[onLevel] -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="doTiming" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="70" conditional="doTiming == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="minSolves" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="70" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
<arg paramname="__format" argname=""\n\n===== Warming up by running %d solves ==========================================\n""/>
<arg paramname="" argname="minSolves"/>
</funccall>
</if>
<else iflinenum="70" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="minSolves" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="71" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
<arg paramname="__format" argname=""\n\n===== Running %d solves ========================================================\n""/>
<arg paramname="" argname="minSolves"/>
</funccall>
</else>
<funccall linenum="72" name="" origname="fflush" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
</funccall>
</if>
<funccall linenum="76" name="" origname="MGResetTimers" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
</funccall>
<funccall linenum="78" name="" origname="zero_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[onLevel]"/>
<arg paramname="id_a" argname="1"/>
</funccall>
<funccall linenum="82" name="" origname="MGSolve" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="all_grids"/>
<arg paramname="onLevel" argname="onLevel"/>
<arg paramname="u_id" argname="1"/>
<arg paramname="F_id" argname="2"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
<arg paramname="rtol" argname="rtol"/>
</funccall>
</loop>
<nonlocal name="stdout"/>
<nonlocal name="all_grids"/>
</function>
<function name="build_interpolation" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<loop linenum="164" loopvar="level" lowerbound="0" upperbound="all_grids -> num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_recvs" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="num_sends" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="23" writes="1"/>
<scalar name="fineBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="3"/>
<access offset="(1)" dependentloopvar="()" reads="0" writes="3"/>
<access offset="(2)" dependentloopvar="()" reads="0" writes="3"/>
<access offset="(0)" dependentloopvar="(level)" reads="13" writes="0"/>
</array>
<if linenum="192" conditional="level &gt; 0 && all_grids -&gt; levels[level] -&gt; num_my_boxes &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_sends" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="14" writes="0"/>
<scalar name="numFineBoxes" datatype="int" isConstant="false" accesstype="readwrite" reads="3" writes="1"/>
<scalar name="numFineBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="numFineRanks" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="elementSize" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="9" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="6" writes="0"/>
</array>
<funccall linenum="198" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineBoxes * sizeof(int )"/>
</funccall>
<funccall linenum="199" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineBoxes * sizeof(RP_type )"/>
</funccall>
<loop linenum="204" loopvar="coarseBox" lowerbound="0" upperbound="all_grids -> levels[level] -> num_my_boxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="global_box_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(coarseBox)" reads="4" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="8" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<loop linenum="210" loopvar="bk" lowerbound="0" upperbound="all_grids -> levels[level - 1] -> boxes_in . k / all_grids -> levels[level] -> boxes_in . k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="bk" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<loop linenum="211" loopvar="bj" lowerbound="0" upperbound="all_grids -> levels[level - 1] -> boxes_in . j / all_grids -> levels[level] -> boxes_in . j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="bj" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<loop linenum="212" loopvar="bi" lowerbound="0" upperbound="all_grids -> levels[level - 1] -> boxes_in . i / all_grids -> levels[level] -> boxes_in . i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="sendRank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="sendBoxID" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="sendBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvRank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvBoxID" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="18" writes="0"/>
<scalar name="numFineBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="10" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="bi" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="bj" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="bk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="coarseBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="coarseBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(coarseBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(fineBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="11" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="21" writes="0"/>
</array>
<array name="fineBoxes" component="" datatype="RP_type" accesstype="writeonly">
<access offset="(numFineBoxes)" dependentloopvar="()" reads="0" writes="9"/>
</array>
<loop linenum="217" loopvar="f" lowerbound="0" upperbound="all_grids -> levels[level - 1] -> num_my_boxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="global_box_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="f" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(f)" reads="1" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<if linenum="217" conditional="all_grids -&gt; levels[level - 1] -&gt; my_boxes[f] . global_box_id == fineBoxID;" adds="0" multiplies="0" divides="0" specials="0">
</if>
</loop>
<if linenum="228" conditional="all_grids -&gt; levels[level - 1] -&gt; rank_of_box[fineBoxID] != all_grids -&gt; levels[level] -&gt; my_rank;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numFineBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(fineBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<array name="fineRanks" component="" datatype="int" accesstype="writeonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
<else iflinenum="228" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numFineBoxesLocal" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
</else>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="234" name="" origname="qsort" module="unknown" flops="unknown">
<arg paramname="__base" argname="fineBoxes"/>
<arg paramname="__nmemb" argname="numFineBoxes"/>
<arg paramname="__size" argname="sizeof(RP_type )"/>
<arg paramname="__compar" argname="qsortRP"/>
</funccall>
<funccall linenum="236" name="" origname="qsort" module="unknown" flops="unknown">
<arg paramname="__base" argname="fineRanks"/>
<arg paramname="__nmemb" argname="numFineBoxesRemote"/>
<arg paramname="__size" argname="sizeof(int )"/>
<arg paramname="__compar" argname="qsortInt"/>
</funccall>
<loop linenum="239" loopvar="neighbor" lowerbound="0" upperbound="numFineBoxesRemote - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numFineBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="fineRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<if linenum="239" conditional="fineRanks[neighbor] != _rank;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numFineRanks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_rank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="fineRanks" component="" datatype="int" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="2" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
</loop>
<funccall linenum="243" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineRanks * sizeof(int )"/>
</funccall>
<funccall linenum="244" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineRanks * sizeof(int )"/>
</funccall>
<funccall linenum="245" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineRanks * sizeof(double *)"/>
</funccall>
<if linenum="246" conditional="numFineRanks &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
</array>
<if linenum="247" conditional="all_grids -&gt; levels[level] -&gt; interpolation . send_ranks ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="247" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->interpolation.send_ranks\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="247" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="248" conditional="all_grids -&gt; levels[level] -&gt; interpolation . send_sizes ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="248" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->interpolation.send_sizes\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="248" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="249" conditional="all_grids -&gt; levels[level] -&gt; interpolation . send_buffers ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="249" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->interpolation.send_buffers\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="249" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
</if>
<funccall linenum="253" name="" origname="MALLOC" module="unknown" flops="unknown">
<arg paramname="size" argname="(numFineBoxesRemote * elementSize) * sizeof(double )"/>
</funccall>
<if linenum="254" conditional="numFineBoxesRemote * elementSize &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="255" conditional="all_send_buffers ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="255" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="255" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<funccall linenum="256" name="" origname="memset" module="unknown" flops="unknown">
<arg paramname="__s" argname="all_send_buffers"/>
<arg paramname="__c" argname="0"/>
<arg paramname="__n" argname="(numFineBoxesRemote * elementSize) * sizeof(double )"/>
</funccall>
<loop linenum="260" loopvar="neighbor" lowerbound="0" upperbound="numFineRanks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="numFineRanks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="1"/>
<scalar name="offset" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="fineRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<array name="all_grids" component="" datatype="mg_type" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
<access offset="(0)" dependentloopvar="(neighbor)" reads="0" writes="3"/>
</array>
<loop linenum="264" loopvar="fineBox" lowerbound="0" upperbound="numFineBoxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="recvRank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numFineBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="fineRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<array name="fineBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(fineBox)" reads="1" writes="0"/>
</array>
<if linenum="264" conditional="fineBoxes[fineBox] . recvRank == fineRanks[neighbor];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="sendBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="12" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="elementSize" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="offset" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="fineBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(fineBox)" reads="0" writes="0"/>
</array>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(neighbor)" reads="0" writes="0"/>
</array>
<funccall linenum="266" name="" origname="append_block_to_list" module="unknown" flops="unknown">
<arg paramname="blocks" argname="&all_grids -> levels[level] -> interpolation . blocks[0]"/>
<arg paramname="allocated_blocks" argname="&all_grids -> levels[level] -> interpolation . allocated_blocks[0]"/>
<arg paramname="num_blocks" argname="&all_grids -> levels[level] -> interpolation . num_blocks[0]"/>
<arg paramname="dim_i" argname="all_grids -> levels[level - 1] -> box_dim / 2"/>
<arg paramname="dim_j" argname="all_grids -> levels[level - 1] -> box_dim / 2"/>
<arg paramname="dim_k" argname="all_grids -> levels[level - 1] -> box_dim / 2"/>
<arg paramname="read_box" argname="fineBoxes[fineBox] . sendBox"/>
<arg paramname="read_ptr" argname="((void *)0)"/>
<arg paramname="read_i" argname="fineBoxes[fineBox] . i"/>
<arg paramname="read_j" argname="fineBoxes[fineBox] . j"/>
<arg paramname="read_k" argname="fineBoxes[fineBox] . k"/>
<arg paramname="read_jStride" argname="all_grids -> levels[level] -> my_boxes[fineBoxes[fineBox] . sendBox] . jStride"/>
<arg paramname="read_kStride" argname="all_grids -> levels[level] -> my_boxes[fineBoxes[fineBox] . sendBox] . kStride"/>
<arg paramname="read_scale" argname="1"/>
<arg paramname="write_box" argname="- 1"/>
<arg paramname="write_ptr" argname="all_grids -> levels[level] -> interpolation . send_buffers[neighbor]"/>
<arg paramname="write_i" argname="offset"/>
<arg paramname="write_j" argname="0"/>
<arg paramname="write_k" argname="0"/>
<arg paramname="write_jStride" argname="all_grids -> levels[level - 1] -> box_dim"/>
<arg paramname="write_kStride" argname="all_grids -> levels[level - 1] -> box_dim * all_grids -> levels[level - 1] -> box_dim"/>
<arg paramname="write_scale" argname="2"/>
<arg paramname="my_blockcopy_tile_i" argname="10000"/>
<arg paramname="my_blockcopy_tile_j" argname="8"/>
<arg paramname="my_blockcopy_tile_k" argname="8"/>
<arg paramname="subtype" argname="0"/>
</funccall>
</if>
</loop>
</loop>
<loop linenum="299" loopvar="fineBox" lowerbound="0" upperbound="numFineBoxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="recvRank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numFineBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="fineBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(fineBox)" reads="1" writes="0"/>
</array>
<if linenum="299" conditional="fineBoxes[fineBox] . recvRank == all_grids -&gt; my_rank;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="sendBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="recvBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="10" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="readonly" reads="9" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="0" writes="0"/>
</array>
<array name="fineBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(fineBox)" reads="0" writes="0"/>
</array>
<funccall linenum="301" name="" origname="append_block_to_list" module="unknown" flops="unknown">
<arg paramname="blocks" argname="&all_grids -> levels[level] -> interpolation . blocks[1]"/>
<arg paramname="allocated_blocks" argname="&all_grids -> levels[level] -> interpolation . allocated_blocks[1]"/>
<arg paramname="num_blocks" argname="&all_grids -> levels[level] -> interpolation . num_blocks[1]"/>
<arg paramname="dim_i" argname="all_grids -> levels[level - 1] -> box_dim / 2"/>
<arg paramname="dim_j" argname="all_grids -> levels[level - 1] -> box_dim / 2"/>
<arg paramname="dim_k" argname="all_grids -> levels[level - 1] -> box_dim / 2"/>
<arg paramname="read_box" argname="fineBoxes[fineBox] . sendBox"/>
<arg paramname="read_ptr" argname="((void *)0)"/>
<arg paramname="read_i" argname="fineBoxes[fineBox] . i"/>
<arg paramname="read_j" argname="fineBoxes[fineBox] . j"/>
<arg paramname="read_k" argname="fineBoxes[fineBox] . k"/>
<arg paramname="read_jStride" argname="all_grids -> levels[level] -> my_boxes[fineBoxes[fineBox] . sendBox] . jStride"/>
<arg paramname="read_kStride" argname="all_grids -> levels[level] -> my_boxes[fineBoxes[fineBox] . sendBox] . kStride"/>
<arg paramname="read_scale" argname="1"/>
<arg paramname="write_box" argname="fineBoxes[fineBox] . recvBox"/>
<arg paramname="write_ptr" argname="((void *)0)"/>
<arg paramname="write_i" argname="0"/>
<arg paramname="write_j" argname="0"/>
<arg paramname="write_k" argname="0"/>
<arg paramname="write_jStride" argname="all_grids -> levels[level - 1] -> my_boxes[fineBoxes[fineBox] . recvBox] . jStride"/>
<arg paramname="write_kStride" argname="all_grids -> levels[level - 1] -> my_boxes[fineBoxes[fineBox] . recvBox] . kStride"/>
<arg paramname="write_scale" argname="2"/>
<arg paramname="my_blockcopy_tile_i" argname="10000"/>
<arg paramname="my_blockcopy_tile_j" argname="8"/>
<arg paramname="my_blockcopy_tile_k" argname="8"/>
<arg paramname="subtype" argname="0"/>
</funccall>
</if>
</loop>
<funccall linenum="330" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="fineBoxes"/>
</funccall>
<funccall linenum="331" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="fineRanks"/>
</funccall>
</if>
<if linenum="337" conditional="level &lt; all_grids -&gt; num_levels - 1 && all_grids -&gt; levels[level] -&gt; num_my_boxes &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_recvs" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="numCoarseBoxes" datatype="int" isConstant="false" accesstype="readwrite" reads="7" writes="1"/>
<scalar name="numCoarseRanks" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="elementSize" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="9" writes="0"/>
</array>
<funccall linenum="341" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseBoxes * sizeof(int )"/>
</funccall>
<funccall linenum="342" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseBoxes * sizeof(RP_type )"/>
</funccall>
<loop linenum="345" loopvar="fineBox" lowerbound="0" upperbound="all_grids -> levels[level] -> num_my_boxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="global_box_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="19" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="1"/>
<scalar name="fineBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(coarseBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(fineBox)" reads="4" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="11" writes="0"/>
<access offset="(1)" dependentloopvar="(level)" reads="7" writes="0"/>
</array>
<if linenum="354" conditional="all_grids -&gt; levels[level] -&gt; my_rank != all_grids -&gt; levels[level + 1] -&gt; rank_of_box[coarseBoxID];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="sendRank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="sendBoxID" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="sendBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvRank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvBoxID" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="numCoarseBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="coarseBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(coarseBoxID)" dependentloopvar="()" reads="2" writes="0"/>
<access offset="(fineBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
<access offset="(1)" dependentloopvar="(level)" reads="2" writes="0"/>
</array>
<array name="coarseBoxes" component="" datatype="RP_type" accesstype="writeonly">
<access offset="(numCoarseBoxes)" dependentloopvar="()" reads="0" writes="6"/>
</array>
<array name="coarseRanks" component="" datatype="int" accesstype="writeonly">
<access offset="(numCoarseBoxes)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
</loop>
<funccall linenum="367" name="" origname="qsort" module="unknown" flops="unknown">
<arg paramname="__base" argname="coarseBoxes"/>
<arg paramname="__nmemb" argname="numCoarseBoxes"/>
<arg paramname="__size" argname="sizeof(RP_type )"/>
<arg paramname="__compar" argname="qsortRP"/>
</funccall>
<funccall linenum="369" name="" origname="qsort" module="unknown" flops="unknown">
<arg paramname="__base" argname="coarseRanks"/>
<arg paramname="__nmemb" argname="numCoarseBoxes"/>
<arg paramname="__size" argname="sizeof(int )"/>
<arg paramname="__compar" argname="qsortInt"/>
</funccall>
<loop linenum="372" loopvar="neighbor" lowerbound="0" upperbound="numCoarseBoxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numCoarseBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="coarseRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<if linenum="372" conditional="coarseRanks[neighbor] != _rank;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numCoarseRanks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_rank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="coarseRanks" component="" datatype="int" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="2" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
</loop>
<funccall linenum="376" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseRanks * sizeof(int )"/>
</funccall>
<funccall linenum="377" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseRanks * sizeof(int )"/>
</funccall>
<funccall linenum="378" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseRanks * sizeof(double *)"/>
</funccall>
<if linenum="379" conditional="numCoarseRanks &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
</array>
<if linenum="380" conditional="all_grids -&gt; levels[level] -&gt; interpolation . recv_ranks ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="380" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->interpolation.recv_ranks\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="380" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="381" conditional="all_grids -&gt; levels[level] -&gt; interpolation . recv_sizes ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="381" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->interpolation.recv_sizes\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="381" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="382" conditional="all_grids -&gt; levels[level] -&gt; interpolation . recv_buffers ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="382" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->interpolation.recv_buffers\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="382" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
</if>
<funccall linenum="386" name="" origname="MALLOC" module="unknown" flops="unknown">
<arg paramname="size" argname="(numCoarseBoxes * elementSize) * sizeof(double )"/>
</funccall>
<if linenum="387" conditional="numCoarseBoxes * elementSize &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="388" conditional="all_recv_buffers ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="388" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="388" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<funccall linenum="389" name="" origname="memset" module="unknown" flops="unknown">
<arg paramname="__s" argname="all_recv_buffers"/>
<arg paramname="__c" argname="0"/>
<arg paramname="__n" argname="(numCoarseBoxes * elementSize) * sizeof(double )"/>
</funccall>
<loop linenum="393" loopvar="neighbor" lowerbound="0" upperbound="numCoarseRanks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="numCoarseRanks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="1"/>
<scalar name="offset" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="coarseRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<array name="all_grids" component="" datatype="mg_type" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
<access offset="(0)" dependentloopvar="(neighbor)" reads="0" writes="3"/>
</array>
<loop linenum="397" loopvar="coarseBox" lowerbound="0" upperbound="numCoarseBoxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="sendRank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numCoarseBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="coarseRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<array name="coarseBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(coarseBox)" reads="1" writes="0"/>
</array>
<if linenum="397" conditional="coarseBoxes[coarseBox] . sendRank == coarseRanks[neighbor];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="recvBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="12" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="elementSize" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="offset" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="coarseBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(coarseBox)" reads="0" writes="0"/>
</array>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(2)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(neighbor)" reads="0" writes="0"/>
</array>
<funccall linenum="399" name="" origname="append_block_to_list" module="unknown" flops="unknown">
<arg paramname="blocks" argname="&all_grids -> levels[level] -> interpolation . blocks[2]"/>
<arg paramname="allocated_blocks" argname="&all_grids -> levels[level] -> interpolation . allocated_blocks[2]"/>
<arg paramname="num_blocks" argname="&all_grids -> levels[level] -> interpolation . num_blocks[2]"/>
<arg paramname="dim_i" argname="all_grids -> levels[level] -> box_dim"/>
<arg paramname="dim_j" argname="all_grids -> levels[level] -> box_dim"/>
<arg paramname="dim_k" argname="all_grids -> levels[level] -> box_dim"/>
<arg paramname="read_box" argname="- 1"/>
<arg paramname="read_ptr" argname="all_grids -> levels[level] -> interpolation . recv_buffers[neighbor]"/>
<arg paramname="read_i" argname="offset"/>
<arg paramname="read_j" argname="0"/>
<arg paramname="read_k" argname="0"/>
<arg paramname="read_jStride" argname="all_grids -> levels[level] -> box_dim"/>
<arg paramname="read_kStride" argname="all_grids -> levels[level] -> box_dim * all_grids -> levels[level] -> box_dim"/>
<arg paramname="read_scale" argname="1"/>
<arg paramname="write_box" argname="coarseBoxes[coarseBox] . recvBox"/>
<arg paramname="write_ptr" argname="((void *)0)"/>
<arg paramname="write_i" argname="0"/>
<arg paramname="write_j" argname="0"/>
<arg paramname="write_k" argname="0"/>
<arg paramname="write_jStride" argname="all_grids -> levels[level] -> my_boxes[coarseBoxes[coarseBox] . recvBox] . jStride"/>
<arg paramname="write_kStride" argname="all_grids -> levels[level] -> my_boxes[coarseBoxes[coarseBox] . recvBox] . kStride"/>
<arg paramname="write_scale" argname="1"/>
<arg paramname="my_blockcopy_tile_i" argname="10000"/>
<arg paramname="my_blockcopy_tile_j" argname="8"/>
<arg paramname="my_blockcopy_tile_k" argname="8"/>
<arg paramname="subtype" argname="0"/>
</funccall>
</if>
</loop>
</loop>
<funccall linenum="432" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="coarseBoxes"/>
</funccall>
<funccall linenum="433" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="coarseRanks"/>
</funccall>
</if>
</loop>
<local name="fineRanks"/>
<local name="fineBoxes"/>
<local name="all_send_buffers"/>
<local name="coarseRanks"/>
<local name="coarseBoxes"/>
<local name="all_recv_buffers"/>
<nonlocal name="stderr"/>
<nonlocal name="all_grids"/>
</function>
<function name="build_restriction" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<loop linenum="464" loopvar="level" lowerbound="0" upperbound="all_grids -> num_levels - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_recvs" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="num_sends" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_levels" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="17" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="writeread" reads="23" writes="1"/>
<scalar name="fineBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(0)" dependentloopvar="()" reads="0" writes="3"/>
<access offset="(1)" dependentloopvar="()" reads="0" writes="3"/>
<access offset="(2)" dependentloopvar="()" reads="0" writes="3"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="9" writes="8"/>
</array>
<if linenum="492" conditional="level &lt; all_grids -&gt; num_levels - 1 && all_grids -&gt; levels[level] -&gt; num_my_boxes &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_sends" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="12" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="23" writes="0"/>
<scalar name="numCoarseBoxes" datatype="int" isConstant="false" accesstype="readwrite" reads="6" writes="1"/>
<scalar name="numCoarseBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numCoarseRanks" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="elementSize" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="restrict_dim_i" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="4"/>
<scalar name="restrict_dim_j" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="4"/>
<scalar name="restrict_dim_k" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="4"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(level)" reads="21" writes="0"/>
<access offset="(1)" dependentloopvar="(level)" reads="3" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="0" writes="4"/>
</array>
<funccall linenum="499" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseBoxes * sizeof(int )"/>
</funccall>
<funccall linenum="500" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseBoxes * sizeof(RP_type )"/>
</funccall>
<loop linenum="505" loopvar="fineBox" lowerbound="0" upperbound="all_grids -> levels[level] -> num_my_boxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="global_box_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sendRank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="sendBoxID" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="sendBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvRank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvBoxID" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="30" writes="0"/>
<scalar name="numCoarseBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="10" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="writeread" reads="7" writes="1"/>
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(coarseBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(fineBox)" reads="14" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="43" writes="0"/>
<access offset="(1)" dependentloopvar="(level)" reads="21" writes="0"/>
</array>
<array name="coarseBoxes" component="" datatype="RP_type" accesstype="writeonly">
<access offset="(numCoarseBoxes)" dependentloopvar="()" reads="0" writes="9"/>
</array>
<loop linenum="514" loopvar="c" lowerbound="0" upperbound="all_grids -> levels[level + 1] -> num_my_boxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="global_box_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="coarseBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="c" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(c)" reads="1" writes="0"/>
<access offset="(1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<if linenum="514" conditional="all_grids -&gt; levels[level + 1] -&gt; my_boxes[c] . global_box_id == coarseBoxID;" adds="0" multiplies="0" divides="0" specials="0">
</if>
</loop>
<if linenum="525" conditional="all_grids -&gt; levels[level] -&gt; my_rank != all_grids -&gt; levels[level + 1] -&gt; rank_of_box[coarseBoxID];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numCoarseBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(coarseBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<array name="coarseRanks" component="" datatype="int" accesstype="writeonly">
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
<else iflinenum="525" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numCoarseBoxesLocal" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
</else>
</loop>
<funccall linenum="531" name="" origname="qsort" module="unknown" flops="unknown">
<arg paramname="__base" argname="coarseBoxes"/>
<arg paramname="__nmemb" argname="numCoarseBoxes"/>
<arg paramname="__size" argname="sizeof(RP_type )"/>
<arg paramname="__compar" argname="qsortRP"/>
</funccall>
<funccall linenum="533" name="" origname="qsort" module="unknown" flops="unknown">
<arg paramname="__base" argname="coarseRanks"/>
<arg paramname="__nmemb" argname="numCoarseBoxesRemote"/>
<arg paramname="__size" argname="sizeof(int )"/>
<arg paramname="__compar" argname="qsortInt"/>
</funccall>
<loop linenum="536" loopvar="neighbor" lowerbound="0" upperbound="numCoarseBoxesRemote - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numCoarseBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="coarseRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<if linenum="536" conditional="coarseRanks[neighbor] != _rank;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numCoarseRanks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_rank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="coarseRanks" component="" datatype="int" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="2" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
</loop>
<funccall linenum="540" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseRanks * sizeof(int )"/>
</funccall>
<funccall linenum="541" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseRanks * sizeof(int )"/>
</funccall>
<funccall linenum="542" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numCoarseRanks * sizeof(double *)"/>
</funccall>
<if linenum="543" conditional="numCoarseRanks &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="3" writes="0"/>
</array>
<if linenum="544" conditional="all_grids -&gt; levels[level] -&gt; restriction[restrictionType] . send_ranks ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="544" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->restriction[restrictionType].send_ranks\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="544" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="545" conditional="all_grids -&gt; levels[level] -&gt; restriction[restrictionType] . send_sizes ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="545" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->restriction[restrictionType].send_sizes\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="545" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="546" conditional="all_grids -&gt; levels[level] -&gt; restriction[restrictionType] . send_buffers ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="546" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->restriction[restrictionType].send_buffers\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="546" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
</if>
<funccall linenum="569" name="" origname="MALLOC" module="unknown" flops="unknown">
<arg paramname="size" argname="(numCoarseBoxes * elementSize) * sizeof(double )"/>
</funccall>
<if linenum="570" conditional="numCoarseBoxes * elementSize &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="571" conditional="all_send_buffers ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="571" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="571" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<funccall linenum="572" name="" origname="memset" module="unknown" flops="unknown">
<arg paramname="__s" argname="all_send_buffers"/>
<arg paramname="__c" argname="0"/>
<arg paramname="__n" argname="(numCoarseBoxes * elementSize) * sizeof(double )"/>
</funccall>
<loop linenum="575" loopvar="neighbor" lowerbound="0" upperbound="numCoarseRanks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="numCoarseRanks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="1"/>
<scalar name="offset" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="coarseRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
<access offset="(0)" dependentloopvar="(neighbor)" reads="0" writes="3"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="3" writes="0"/>
</array>
<loop linenum="579" loopvar="coarseBox" lowerbound="0" upperbound="numCoarseBoxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="recvRank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numCoarseBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="coarseRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<array name="coarseBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(coarseBox)" reads="1" writes="0"/>
</array>
<if linenum="579" conditional="coarseBoxes[coarseBox] . recvRank == coarseRanks[neighbor];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sendBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="elementSize" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrict_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="restrict_dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="restrict_dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="offset" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="coarseBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(coarseBox)" reads="0" writes="0"/>
</array>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(neighbor)" reads="0" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<funccall linenum="581" name="" origname="append_block_to_list" module="unknown" flops="unknown">
<arg paramname="blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . blocks[0]"/>
<arg paramname="allocated_blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . allocated_blocks[0]"/>
<arg paramname="num_blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . num_blocks[0]"/>
<arg paramname="dim_i" argname="restrict_dim_i"/>
<arg paramname="dim_j" argname="restrict_dim_j"/>
<arg paramname="dim_k" argname="restrict_dim_k"/>
<arg paramname="read_box" argname="coarseBoxes[coarseBox] . sendBox"/>
<arg paramname="read_ptr" argname="((void *)0)"/>
<arg paramname="read_i" argname="0"/>
<arg paramname="read_j" argname="0"/>
<arg paramname="read_k" argname="0"/>
<arg paramname="read_jStride" argname="all_grids -> levels[level] -> my_boxes[coarseBoxes[coarseBox] . sendBox] . jStride"/>
<arg paramname="read_kStride" argname="all_grids -> levels[level] -> my_boxes[coarseBoxes[coarseBox] . sendBox] . kStride"/>
<arg paramname="read_scale" argname="2"/>
<arg paramname="write_box" argname="- 1"/>
<arg paramname="write_ptr" argname="all_grids -> levels[level] -> restriction[restrictionType] . send_buffers[neighbor]"/>
<arg paramname="write_i" argname="offset"/>
<arg paramname="write_j" argname="0"/>
<arg paramname="write_k" argname="0"/>
<arg paramname="write_jStride" argname="restrict_dim_i"/>
<arg paramname="write_kStride" argname="restrict_dim_i * restrict_dim_j"/>
<arg paramname="write_scale" argname="1"/>
<arg paramname="my_blockcopy_tile_i" argname="10000"/>
<arg paramname="my_blockcopy_tile_j" argname="8"/>
<arg paramname="my_blockcopy_tile_k" argname="8"/>
<arg paramname="subtype" argname="0"/>
</funccall>
</if>
</loop>
</loop>
<loop linenum="617" loopvar="coarseBox" lowerbound="0" upperbound="numCoarseBoxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="recvRank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numCoarseBoxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<array name="coarseBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(coarseBox)" reads="1" writes="0"/>
</array>
<if linenum="617" conditional="coarseBoxes[coarseBox] . recvRank == all_grids -&gt; levels[level + 1] -&gt; my_rank;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="sendBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="recvBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="7" writes="0"/>
<scalar name="restrict_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrict_dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrict_dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="readonly" reads="9" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(1)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<array name="coarseBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(coarseBox)" reads="0" writes="0"/>
</array>
<funccall linenum="619" name="" origname="append_block_to_list" module="unknown" flops="unknown">
<arg paramname="blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . blocks[1]"/>
<arg paramname="allocated_blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . allocated_blocks[1]"/>
<arg paramname="num_blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . num_blocks[1]"/>
<arg paramname="dim_i" argname="restrict_dim_i"/>
<arg paramname="dim_j" argname="restrict_dim_j"/>
<arg paramname="dim_k" argname="restrict_dim_k"/>
<arg paramname="read_box" argname="coarseBoxes[coarseBox] . sendBox"/>
<arg paramname="read_ptr" argname="((void *)0)"/>
<arg paramname="read_i" argname="0"/>
<arg paramname="read_j" argname="0"/>
<arg paramname="read_k" argname="0"/>
<arg paramname="read_jStride" argname="all_grids -> levels[level] -> my_boxes[coarseBoxes[coarseBox] . sendBox] . jStride"/>
<arg paramname="read_kStride" argname="all_grids -> levels[level] -> my_boxes[coarseBoxes[coarseBox] . sendBox] . kStride"/>
<arg paramname="read_scale" argname="2"/>
<arg paramname="write_box" argname="coarseBoxes[coarseBox] . recvBox"/>
<arg paramname="write_ptr" argname="((void *)0)"/>
<arg paramname="write_i" argname="coarseBoxes[coarseBox] . i"/>
<arg paramname="write_j" argname="coarseBoxes[coarseBox] . j"/>
<arg paramname="write_k" argname="coarseBoxes[coarseBox] . k"/>
<arg paramname="write_jStride" argname="all_grids -> levels[level + 1] -> my_boxes[coarseBoxes[coarseBox] . recvBox] . jStride"/>
<arg paramname="write_kStride" argname="all_grids -> levels[level + 1] -> my_boxes[coarseBoxes[coarseBox] . recvBox] . kStride"/>
<arg paramname="write_scale" argname="1"/>
<arg paramname="my_blockcopy_tile_i" argname="10000"/>
<arg paramname="my_blockcopy_tile_j" argname="8"/>
<arg paramname="my_blockcopy_tile_k" argname="8"/>
<arg paramname="subtype" argname="0"/>
</funccall>
</if>
</loop>
<funccall linenum="650" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="coarseBoxes"/>
</funccall>
<funccall linenum="651" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="coarseRanks"/>
</funccall>
</if>
<if linenum="659" conditional="level &gt; 0 && all_grids -&gt; levels[level] -&gt; num_my_boxes &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_recvs" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="12" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="23" writes="0"/>
<scalar name="numFineBoxesMax" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="numFineBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="numFineRanks" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="elementSize" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="restrict_dim_i" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="4"/>
<scalar name="restrict_dim_j" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="4"/>
<scalar name="restrict_dim_k" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="4"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(level)" reads="9" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="15" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="0" writes="4"/>
</array>
<funccall linenum="665" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineBoxesMax * sizeof(int )"/>
</funccall>
<funccall linenum="666" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineBoxesMax * sizeof(RP_type )"/>
</funccall>
<loop linenum="669" loopvar="coarseBox" lowerbound="0" upperbound="all_grids -> levels[level] -> num_my_boxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="global_box_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(coarseBox)" reads="4" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="8" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<loop linenum="675" loopvar="bk" lowerbound="0" upperbound="all_grids -> levels[level - 1] -> boxes_in . k / all_grids -> levels[level] -> boxes_in . k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="bk" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<loop linenum="676" loopvar="bj" lowerbound="0" upperbound="all_grids -> levels[level - 1] -> boxes_in . j / all_grids -> levels[level] -> boxes_in . j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="bj" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="1" writes="0"/>
</array>
<loop linenum="677" loopvar="bi" lowerbound="0" upperbound="all_grids -> levels[level - 1] -> boxes_in . i / all_grids -> levels[level] -> boxes_in . i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="13" writes="0"/>
<scalar name="bi" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="bj" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="bk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(fineBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="4" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="7" writes="0"/>
</array>
<if linenum="682" conditional="all_grids -&gt; levels[level - 1] -&gt; rank_of_box[fineBoxID] != all_grids -&gt; levels[level] -&gt; my_rank;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="sendRank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="sendBoxID" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="sendBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvRank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvBoxID" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="recvBox" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="numFineBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="11" writes="0"/>
<scalar name="coarseBox" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="bi" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="bj" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="bk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="coarseBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="fineBoxID" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(coarseBoxID)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(fineBoxID)" dependentloopvar="()" reads="2" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="1" writes="0"/>
<access offset="(-1)" dependentloopvar="(level)" reads="5" writes="0"/>
</array>
<array name="fineBoxes" component="" datatype="RP_type" accesstype="writeonly">
<access offset="(numFineBoxesRemote)" dependentloopvar="()" reads="0" writes="9"/>
</array>
<array name="fineRanks" component="" datatype="int" accesstype="writeonly">
<access offset="(numFineBoxesRemote)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="698" name="" origname="qsort" module="unknown" flops="unknown">
<arg paramname="__base" argname="fineBoxes"/>
<arg paramname="__nmemb" argname="numFineBoxesRemote"/>
<arg paramname="__size" argname="sizeof(RP_type )"/>
<arg paramname="__compar" argname="qsortRP"/>
</funccall>
<funccall linenum="700" name="" origname="qsort" module="unknown" flops="unknown">
<arg paramname="__base" argname="fineRanks"/>
<arg paramname="__nmemb" argname="numFineBoxesRemote"/>
<arg paramname="__size" argname="sizeof(int )"/>
<arg paramname="__compar" argname="qsortInt"/>
</funccall>
<loop linenum="703" loopvar="neighbor" lowerbound="0" upperbound="numFineBoxesRemote - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numFineBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="fineRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<if linenum="703" conditional="fineRanks[neighbor] != _rank;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="numFineRanks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_rank" datatype="int" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="fineRanks" component="" datatype="int" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="2" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
</loop>
<funccall linenum="707" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineRanks * sizeof(int )"/>
</funccall>
<funccall linenum="708" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineRanks * sizeof(int )"/>
</funccall>
<funccall linenum="709" name="" origname="malloc" module="unknown" flops="unknown">
<arg paramname="__size" argname="numFineRanks * sizeof(double *)"/>
</funccall>
<if linenum="710" conditional="numFineRanks &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="3" writes="0"/>
</array>
<if linenum="711" conditional="all_grids -&gt; levels[level] -&gt; restriction[restrictionType] . recv_ranks ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="711" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->restriction[restrictionType].recv_ranks \n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="711" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="712" conditional="all_grids -&gt; levels[level] -&gt; restriction[restrictionType] . recv_sizes ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="712" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->restriction[restrictionType].recv_sizes \n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="712" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="713" conditional="all_grids -&gt; levels[level] -&gt; restriction[restrictionType] . recv_buffers ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="713" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname=""malloc failed - all_grids->levels[%d]->restriction[restrictionType].recv_buffers\n""/>
<arg paramname="" argname="level"/>
</funccall>
<funccall linenum="713" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
</if>
<funccall linenum="736" name="" origname="MALLOC" module="unknown" flops="unknown">
<arg paramname="size" argname="(numFineBoxesRemote * elementSize) * sizeof(double )"/>
</funccall>
<if linenum="737" conditional="numFineBoxesRemote * elementSize &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="738" conditional="all_recv_buffers ==((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="738" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="738" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<funccall linenum="739" name="" origname="memset" module="unknown" flops="unknown">
<arg paramname="__s" argname="all_recv_buffers"/>
<arg paramname="__c" argname="0"/>
<arg paramname="__n" argname="(numFineBoxesRemote * elementSize) * sizeof(double )"/>
</funccall>
<loop linenum="743" loopvar="neighbor" lowerbound="0" upperbound="numFineRanks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="numFineRanks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="writeread" reads="6" writes="1"/>
<scalar name="offset" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="fineRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(level)" reads="3" writes="0"/>
<access offset="(0)" dependentloopvar="(neighbor)" reads="0" writes="3"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="3" writes="0"/>
</array>
<loop linenum="747" loopvar="fineBox" lowerbound="0" upperbound="numFineBoxesRemote - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="sendRank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="numFineBoxesRemote" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="fineRanks" component="" datatype="int" accesstype="readonly">
<access offset="(0)" dependentloopvar="(neighbor)" reads="1" writes="0"/>
</array>
<array name="fineBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(fineBox)" reads="1" writes="0"/>
</array>
<if linenum="747" conditional="fineBoxes[fineBox] . sendRank == fineRanks[neighbor];" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="recvBox" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="level" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="neighbor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="elementSize" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrict_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="restrict_dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="restrict_dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fineBox" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="offset" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="fineBoxes" component="" datatype="RP_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(fineBox)" reads="0" writes="0"/>
</array>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(2)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(level)" reads="0" writes="0"/>
<access offset="(0)" dependentloopvar="(neighbor)" reads="0" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<funccall linenum="749" name="" origname="append_block_to_list" module="unknown" flops="unknown">
<arg paramname="blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . blocks[2]"/>
<arg paramname="allocated_blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . allocated_blocks[2]"/>
<arg paramname="num_blocks" argname="&all_grids -> levels[level] -> restriction[restrictionType] . num_blocks[2]"/>
<arg paramname="dim_i" argname="restrict_dim_i"/>
<arg paramname="dim_j" argname="restrict_dim_j"/>
<arg paramname="dim_k" argname="restrict_dim_k"/>
<arg paramname="read_box" argname="- 1"/>
<arg paramname="read_ptr" argname="all_grids -> levels[level] -> restriction[restrictionType] . recv_buffers[neighbor]"/>
<arg paramname="read_i" argname="offset"/>
<arg paramname="read_j" argname="0"/>
<arg paramname="read_k" argname="0"/>
<arg paramname="read_jStride" argname="restrict_dim_i"/>
<arg paramname="read_kStride" argname="restrict_dim_i * restrict_dim_j"/>
<arg paramname="read_scale" argname="1"/>
<arg paramname="write_box" argname="fineBoxes[fineBox] . recvBox"/>
<arg paramname="write_ptr" argname="((void *)0)"/>
<arg paramname="write_i" argname="fineBoxes[fineBox] . i"/>
<arg paramname="write_j" argname="fineBoxes[fineBox] . j"/>
<arg paramname="write_k" argname="fineBoxes[fineBox] . k"/>
<arg paramname="write_jStride" argname="all_grids -> levels[level] -> my_boxes[fineBoxes[fineBox] . recvBox] . jStride"/>
<arg paramname="write_kStride" argname="all_grids -> levels[level] -> my_boxes[fineBoxes[fineBox] . recvBox] . kStride"/>
<arg paramname="write_scale" argname="1"/>
<arg paramname="my_blockcopy_tile_i" argname="10000"/>
<arg paramname="my_blockcopy_tile_j" argname="8"/>
<arg paramname="my_blockcopy_tile_k" argname="8"/>
<arg paramname="subtype" argname="0"/>
</funccall>
</if>
</loop>
</loop>
<funccall linenum="784" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="fineBoxes"/>
</funccall>
<funccall linenum="785" name="" origname="free" module="unknown" flops="unknown">
<arg paramname="__ptr" argname="fineRanks"/>
</funccall>
</if>
</loop>
<local name="coarseRanks"/>
<local name="coarseBoxes"/>
<local name="all_send_buffers"/>
<local name="fineRanks"/>
<local name="fineBoxes"/>
<local name="all_recv_buffers"/>
<nonlocal name="stderr"/>
<nonlocal name="all_grids"/>
</function>
<function name="color_vector" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="7" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="442" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="446" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_a" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(block)" reads="14" writes="0"/>
<access offset="(id_a)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="7" writes="0"/>
</array>
<loop linenum="463" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="colors_in_each_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kcolor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="boxlowk" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="sk" datatype="double" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<if linenum="463" conditional="(k + boxlowk + kcolor) % colors_in_each_dim == 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<loop linenum="464" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="colors_in_each_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jcolor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="boxlowj" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="sj" datatype="double" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<if linenum="464" conditional="(j + boxlowj + jcolor) % colors_in_each_dim == 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<loop linenum="465" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="0" multiplies="2" divides="0" specials="0">
<scalar name="colors_in_each_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="icolor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="boxlowi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sk" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sj" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="si" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<array name="grid" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
<if linenum="465" conditional="(i + boxlowi + icolor) % colors_in_each_dim == 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="470" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="grid"/>
<nonlocal name="level"/>
</function>
<function name="dot" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a_dot_b_level" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<funccall linenum="240" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="247" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_a" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_b" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="a_dot_b_level" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="a_dot_b_block" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(block)" reads="12" writes="0"/>
<access offset="(id_a)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(id_b)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="5" writes="0"/>
</array>
<loop linenum="263" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="264" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="265" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a_dot_b_block" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="grid_a" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="grid_b" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="271" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="grid_a"/>
<local name="grid_b"/>
<nonlocal name="level"/>
</function>
<function name="evaluateBeta" adds="1" multiplies="36" divides="3" specials="12">
<scalar name="x" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="y" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="z" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="add_Bxx" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="add_Byy" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="add_Bzz" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="18" writes="0"/>
<scalar name="B" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="Bxx" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Byy" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Bzz" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="22" conditional="add_Bxx;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="23" conditional="add_Byy;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="24" conditional="add_Bzz;" adds="0" multiplies="0" divides="0" specials="0">
</if>
</function>
<function name="evaluateF" adds="9" multiplies="68" divides="3" specials="24">
<scalar name="x" datatype="double" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="y" datatype="double" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="z" datatype="double" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="add_Fxx" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="add_Fyy" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="add_Fzz" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="36" writes="0"/>
<scalar name="p" datatype="double" isConstant="false" accesstype="readonly" reads="30" writes="0"/>
<scalar name="F" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="Fxx" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Fyy" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Fzz" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="81" conditional="add_Fxx;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="82" conditional="add_Fyy;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="83" conditional="add_Fzz;" adds="0" multiplies="0" divides="0" specials="0">
</if>
</function>
<function name="exchange_boundary" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="tag" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghostZone_total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readwrite" reads="3" writes="1"/>
<scalar name="_timeCommunicationStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(shape)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<funccall linenum="13" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<if linenum="16" conditional="shape &gt;= 3;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="82" conditional="level -&gt; exchange_ghosts[shape] . num_blocks[1];" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="ghostZone_local" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="_timeEnd" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(shape)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<funccall linenum="83" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="85" loopvar="buffer" lowerbound="0" upperbound="level -> exchange_ghosts[shape] . num_blocks[1] - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="shape" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="buffer" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0,1,shape)" dependentloopvar="(buffer,,)" reads="0" writes="0"/>
<access offset="(shape)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<funccall linenum="86" name="" origname="CopyBlock" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="id"/>
<arg paramname="block" argname="&level -> exchange_ghosts[shape] . blocks[1][buffer]"/>
</funccall>
</loop>
<funccall linenum="88" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="116" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<nonlocal name="level"/>
</function>
<function name="extrapolate_betas" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="type" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="boundary_conditions" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(6)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(7)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(8)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="5" writes="0"/>
<access offset="(shape)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<if linenum="574" conditional="level -&gt; boundary_condition . type == 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="578" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="580" loopvar="buffer" lowerbound="0" upperbound="level -> boundary_condition . num_blocks[shape] - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="shape" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="buffer" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="subtype" datatype="int" isConstant="false" accesstype="readonly" reads="7" writes="0"/>
<scalar name="normal" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="di" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="dj" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="dk" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="box_dim" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0,shape)" dependentloopvar="(buffer,)" reads="12" writes="0"/>
<access offset="(0,0,shape)" dependentloopvar="(,buffer,)" reads="5" writes="0"/>
</array>
<if linenum="595" conditional="ilo &lt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="596" conditional="jlo &lt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="597" conditional="klo &lt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="598" conditional="ilo &gt;= level -&gt; box_dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="599" conditional="jlo &gt;= level -&gt; box_dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="600" conditional="klo &gt;= level -&gt; box_dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="645" conditional="level -&gt; box_dim &gt;= 5;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="647" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="648" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="649" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="subtype" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<if linenum="651" conditional="subtype != 14 && subtype != 12;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="biStride" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<array name="beta_i" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*biStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+3*biStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+4*biStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+5*biStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+biStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="652" conditional="subtype != 16 && subtype != 10;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="bjStride" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<array name="beta_j" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*bjStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+3*bjStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+4*bjStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+5*bjStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+bjStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="653" conditional="subtype != 22 && subtype != 4;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="bkStride" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<array name="beta_k" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*bkStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+3*bkStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+4*bkStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+5*bkStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+bkStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
</loop>
</loop>
</loop>
</if>
<if linenum="656" conditional="level -&gt; box_dim &gt;= 4;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="658" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="659" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="660" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="subtype" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<if linenum="662" conditional="subtype != 14 && subtype != 12;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="biStride" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<array name="beta_i" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*biStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+3*biStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+4*biStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+biStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="663" conditional="subtype != 16 && subtype != 10;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="bjStride" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<array name="beta_j" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*bjStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+3*bjStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+4*bjStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+bjStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="664" conditional="subtype != 22 && subtype != 4;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="bkStride" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<array name="beta_k" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*bkStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+3*bkStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+4*bkStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+bkStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
</loop>
</loop>
</loop>
</if>
<if linenum="667" conditional="level -&gt; box_dim &gt;= 2;" adds="0" multiplies="0" divides="0" specials="0">
<loop linenum="669" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="670" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="671" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="subtype" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<if linenum="673" conditional="subtype != 14 && subtype != 12;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="biStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="beta_i" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*biStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+biStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="674" conditional="subtype != 16 && subtype != 10;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="bjStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="beta_j" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*bjStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+bjStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="675" conditional="subtype != 22 && subtype != 4;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="bkStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<array name="beta_k" component="" datatype="double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
<access offset="(ijk+2*bkStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+bkStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
</loop>
</loop>
</loop>
</if>
</loop>
<funccall linenum="680" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="beta_i"/>
<local name="beta_j"/>
<local name="beta_k"/>
<nonlocal name="level"/>
</function>
<function name="initialize_problem" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="hLevel" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="94" loopvar="box" lowerbound="0" upperbound="level -> num_my_boxes - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box" datatype="int" isConstant="false" accesstype="writeread" reads="8" writes="1"/>
<scalar name="num_my_boxes" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(box)" reads="6" writes="0"/>
</array>
<loop linenum="105" loopvar="k" lowerbound="0" upperbound="dim_k" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_k" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="106" loopvar="j" lowerbound="0" upperbound="dim_j" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="dim_j" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="107" loopvar="i" lowerbound="0" upperbound="dim_i" stride="1" adds="3" multiplies="6" divides="0" specials="0">
<scalar name="hLevel" datatype="double" isConstant="false" accesstype="readonly" reads="10" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="dim_i" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="x" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="y" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="z" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="A" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="Bi" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="2"/>
<scalar name="Bj" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="2"/>
<scalar name="Bk" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="2"/>
<scalar name="F" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(box)" reads="8" writes="0"/>
<access offset="(ghosts+ghosts+-ghosts+ghosts+-ghosts,2,0)" dependentloopvar="(k,j,i,,box)" reads="0" writes="1"/>
<access offset="(ghosts+ghosts+-ghosts+ghosts+-ghosts,6,0)" dependentloopvar="(k,j,i,,box)" reads="0" writes="1"/>
<access offset="(ghosts+ghosts+-ghosts+ghosts+-ghosts,7,0)" dependentloopvar="(k,j,i,,box)" reads="0" writes="1"/>
<access offset="(ghosts+ghosts+-ghosts+ghosts+-ghosts,8,0)" dependentloopvar="(k,j,i,,box)" reads="0" writes="1"/>
<access offset="(ghosts+ghosts+-ghosts+ghosts+-ghosts,9,0)" dependentloopvar="(k,j,i,,box)" reads="0" writes="1"/>
</array>
<funccall linenum="122" name="" origname="evaluateBeta" module="unknown" flops="unknown">
<arg paramname="x" argname="x - hLevel * 0.5"/>
<arg paramname="y" argname="y"/>
<arg paramname="z" argname="z"/>
<arg paramname="h" argname="hLevel"/>
<arg paramname="add_Bxx" argname="0"/>
<arg paramname="add_Byy" argname="1"/>
<arg paramname="add_Bzz" argname="1"/>
</funccall>
<funccall linenum="123" name="" origname="evaluateBeta" module="unknown" flops="unknown">
<arg paramname="x" argname="x"/>
<arg paramname="y" argname="y - hLevel * 0.5"/>
<arg paramname="z" argname="z"/>
<arg paramname="h" argname="hLevel"/>
<arg paramname="add_Bxx" argname="1"/>
<arg paramname="add_Byy" argname="0"/>
<arg paramname="add_Bzz" argname="1"/>
</funccall>
<funccall linenum="124" name="" origname="evaluateBeta" module="unknown" flops="unknown">
<arg paramname="x" argname="x"/>
<arg paramname="y" argname="y"/>
<arg paramname="z" argname="z - hLevel * 0.5"/>
<arg paramname="h" argname="hLevel"/>
<arg paramname="add_Bxx" argname="1"/>
<arg paramname="add_Byy" argname="1"/>
<arg paramname="add_Bzz" argname="0"/>
</funccall>
<funccall linenum="127" name="" origname="evaluateF" module="unknown" flops="unknown">
<arg paramname="x" argname="x"/>
<arg paramname="y" argname="y"/>
<arg paramname="z" argname="z"/>
<arg paramname="h" argname="hLevel"/>
<arg paramname="add_Fxx" argname="1"/>
<arg paramname="add_Fyy" argname="1"/>
<arg paramname="add_Fzz" argname="1"/>
</funccall>
</loop>
</loop>
</loop>
</loop>
<nonlocal name="level"/>
</function>
<function name="interpolation_v2_block" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="27" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<if linenum="29" conditional="block -&gt; read . box &gt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level_c" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="3" writes="0"/>
<access offset="(id_c)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="34" conditional="block -&gt; write . box &gt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="id_f" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level_f" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="3" writes="0"/>
<access offset="(id_f)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<loop linenum="70" loopvar="k" lowerbound="0" upperbound="write_dim_k - 2" stride="2" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="write_dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="71" loopvar="j" lowerbound="0" upperbound="write_dim_j - 2" stride="2" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="write_dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_i" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="write_j" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="write_k" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="jj" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="77" loopvar="i" lowerbound="0" upperbound="write_dim_i - 2" stride="2" adds="84" multiplies="46" divides="0" specials="0">
<scalar name="prescale_f" datatype="double" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="write_dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="19" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="19" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="19" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ii" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c1" datatype="double" isConstant="false" accesstype="readonly" reads="38" writes="0"/>
<scalar name="c000" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c100" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c200" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c010" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c110" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c210" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c020" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c120" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c220" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c001" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c101" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c201" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c011" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c111" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c211" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c021" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c121" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c221" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c002" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c102" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c202" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c012" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c112" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c212" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c022" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c122" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="c222" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c00" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c00" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c10" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c10" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c20" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c20" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c01" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c01" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c11" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c11" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c21" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c21" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c02" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c02" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c12" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c12" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f0c22" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f1c22" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f00c0" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f10c0" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f01c0" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f11c0" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f00c1" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f10c1" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f01c1" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f11c1" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f00c2" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f10c2" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f01c2" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f11c2" datatype="const double" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="f000" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="f100" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="f010" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="f110" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="f001" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="f101" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="f011" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="f111" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="read" component="" datatype="const double" accesstype="readonly">
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1+read_jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1+read_jStride+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1+read_jStride+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1+-read_jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1+-read_jStride+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1+-read_jStride+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+1+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+read_jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+read_jStride+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+read_jStride+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1+read_jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1+read_jStride+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1+read_jStride+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1+-read_jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1+-read_jStride+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1+-read_jStride+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-1+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-read_jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-read_jStride+read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-read_jStride+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1+-1+read_i+1+-1+read_j+-1+-1+-read_j+1+-1+read_k+-1+-1+-read_k+-read_kStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="write00" component="" datatype="double" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(i)" reads="1" writes="1"/>
<access offset="(1)" dependentloopvar="(i)" reads="1" writes="1"/>
</array>
<array name="write10" component="" datatype="double" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(i)" reads="1" writes="1"/>
<access offset="(1)" dependentloopvar="(i)" reads="1" writes="1"/>
</array>
<array name="write01" component="" datatype="double" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(i)" reads="1" writes="1"/>
<access offset="(1)" dependentloopvar="(i)" reads="1" writes="1"/>
</array>
<array name="write11" component="" datatype="double" accesstype="readwrite">
<access offset="(0)" dependentloopvar="(i)" reads="1" writes="1"/>
<access offset="(1)" dependentloopvar="(i)" reads="1" writes="1"/>
</array>
</loop>
</loop>
</loop>
<local name="read"/>
<local name="write"/>
<local name="write00"/>
<local name="write10"/>
<local name="write01"/>
<local name="write11"/>
<nonlocal name="level_f"/>
<nonlocal name="level_c"/>
<nonlocal name="block"/>
</function>
<function name="interpolation_v2" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="_timeCommunicationStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="tag" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="interpolation_total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level_c" component="" datatype="level_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<funccall linenum="211" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level_c"/>
<arg paramname="id" argname="id_c"/>
<arg paramname="shape" argname="0"/>
</funccall>
<funccall linenum="212" name="" origname="apply_BCs_v2" module="unknown" flops="unknown">
<arg paramname="level" argname="level_c"/>
<arg paramname="x_id" argname="id_c"/>
<arg paramname="shape" argname="0"/>
</funccall>
<funccall linenum="214" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<if linenum="285" conditional="level_c -&gt; interpolation . num_blocks[1] &gt; 0;" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="_timeEnd" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="interpolation_local" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level_c" component="" datatype="level_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<funccall linenum="286" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="288" loopvar="buffer" lowerbound="0" upperbound="level_c -> interpolation . num_blocks[1] - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="id_f" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="prescale_f" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="buffer" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="level_c" component="" datatype="level_type" accesstype="readonly">
<access offset="(0,1)" dependentloopvar="(buffer,)" reads="0" writes="0"/>
</array>
<funccall linenum="289" name="" origname="interpolation_v2_block" module="unknown" flops="unknown">
<arg paramname="level_f" argname="level_f"/>
<arg paramname="id_f" argname="id_f"/>
<arg paramname="prescale_f" argname="prescale_f"/>
<arg paramname="level_c" argname="level_c"/>
<arg paramname="id_c" argname="id_c"/>
<arg paramname="block" argname="&level_c -> interpolation . blocks[1][buffer]"/>
</funccall>
</loop>
<funccall linenum="291" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="319" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<nonlocal name="level_f"/>
<nonlocal name="level_c"/>
</function>
<function name="interpolation_vcycle" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="id_f" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="prescale_f" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="204" name="" origname="interpolation_v2" module="unknown" flops="unknown">
<arg paramname="level_f" argname="level_f"/>
<arg paramname="id_f" argname="id_f"/>
<arg paramname="prescale_f" argname="prescale_f"/>
<arg paramname="level_c" argname="level_c"/>
<arg paramname="id_c" argname="id_c"/>
</funccall>
<nonlocal name="level_f"/>
<nonlocal name="level_c"/>
</function>
<function name="main" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="type" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="argc" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="7" writes="0"/>
<scalar name="num_tasks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="bc" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="minCoarseDim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="152" conditional="argc == 3;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_tasks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="log2_box_dim" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="target_boxes_per_rank" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<array name="argv" component="" datatype="char *" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(2)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<funccall linenum="153" name="" origname="atoi" module="unknown" flops="unknown">
<arg paramname="__nptr" argname="argv[1]"/>
</funccall>
<funccall linenum="154" name="" origname="atoi" module="unknown" flops="unknown">
<arg paramname="__nptr" argname="argv[2]"/>
</funccall>
<if linenum="156" conditional="log2_box_dim &gt; 9;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="158" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="158" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="162" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="165" conditional="log2_box_dim &lt; 4;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="166" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="166" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="170" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<if linenum="173" conditional="target_boxes_per_rank &lt; 1;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="174" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="174" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="178" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
<loop linenum="188" loopvar="bi" lowerbound="1" upperbound="1000 - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<if linenum="190" conditional="total_boxes &lt;= target_boxes;" adds="0" multiplies="0" divides="0" specials="0">
<if linenum="193" conditional="coarse_grid_dim &lt;= 11;" adds="0" multiplies="0" divides="0" specials="0">
</if>
</if>
</loop>
<if linenum="198" conditional="boxes_in_i &lt; 1;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="199" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="199" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="203" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</if>
</if>
<else iflinenum="152" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="238" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="238" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="243" name="" origname="exit" module="unknown" flops="unknown">
<arg paramname="__status" argname="0"/>
</funccall>
</else>
<if linenum="250" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_tasks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="OMP_Threads" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="251" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="252" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="253" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="254" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="269" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="270" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="284" name="" origname="stencil_get_radius" module="unknown" flops="unknown">
</funccall>
<funccall linenum="285" name="" origname="create_level" module="unknown" flops="unknown">
<arg paramname="level" argname="&level_h"/>
<arg paramname="boxes_in_i" argname="boxes_in_i"/>
<arg paramname="box_dim" argname="box_dim"/>
<arg paramname="box_ghosts" argname="ghosts"/>
<arg paramname="numVectors" argname="11"/>
<arg paramname="domain_boundary_condition" argname="bc"/>
<arg paramname="my_rank" argname="my_rank"/>
<arg paramname="num_ranks" argname="num_tasks"/>
</funccall>
<if linenum="288" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="288" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="294" name="" origname="initialize_problem" module="unknown" flops="unknown">
<arg paramname="level" argname="&level_h"/>
<arg paramname="hLevel" argname="h"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
</funccall>
<funccall linenum="295" name="" origname="rebuild_operator" module="unknown" flops="unknown">
<arg paramname="level" argname="&level_h"/>
<arg paramname="fromLevel" argname="((void *)0)"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
</funccall>
<if linenum="296" conditional="level_h . boundary_condition . type == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="average_value_of_f" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="297" name="" origname="mean" module="unknown" flops="unknown">
<arg paramname="level" argname="&level_h"/>
<arg paramname="id_a" argname="2"/>
</funccall>
<if linenum="298" conditional="average_value_of_f != 0.0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="average_value_of_f" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="299" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="average_value_of_f" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="299" name="" origname="fprintf" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stderr"/>
<arg paramname="__format" argname="" WARNING... Periodic boundary conditions, but f does not sum to zero... mean(f)=%e\n""/>
<arg paramname="" argname="average_value_of_f"/>
</funccall>
</if>
<funccall linenum="300" name="" origname="shift_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="&level_h"/>
<arg paramname="id_c" argname="2"/>
<arg paramname="id_a" argname="2"/>
<arg paramname="shift_a" argname="-average_value_of_f"/>
</funccall>
</if>
</if>
<funccall linenum="308" name="" origname="MGBuild" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="&MG_h"/>
<arg paramname="fine_grid" argname="&level_h"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
<arg paramname="minCoarseGridDim" argname="minCoarseDim"/>
</funccall>
<loop linenum="322" loopvar="l" lowerbound="0" upperbound="3 - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="MGSolve" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="MGSolves_performed" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rtol" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="l" datatype="int" isConstant="false" accesstype="writeread" reads="8" writes="1"/>
<array name="AverageSolveTime" component="" datatype="double" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(l)" reads="0" writes="1"/>
</array>
<if linenum="324" conditional="l &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="324" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="MG_h . levels[l]"/>
<arg paramname="id_c" argname="2"/>
<arg paramname="level_f" argname="MG_h . levels[l - 1]"/>
<arg paramname="id_f" argname="2"/>
<arg paramname="restrictionType" argname="0"/>
</funccall>
<funccall linenum="325" name="" origname="bench_hpgmg" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="&MG_h"/>
<arg paramname="onLevel" argname="l"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
<arg paramname="rtol" argname="rtol"/>
</funccall>
<if linenum="327" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="327" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="328" name="" origname="MGPrintTiming" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="&MG_h"/>
<arg paramname="fromLevel" argname="l"/>
</funccall>
</loop>
<if linenum="331" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="338" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<loop linenum="339" loopvar="l" lowerbound="0" upperbound="3 - 1" stride="1" adds="0" multiplies="1" divides="1" specials="0">
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_tasks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="OMP_Threads" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="l" datatype="int" isConstant="false" accesstype="writeread" reads="7" writes="1"/>
<scalar name="SecondsPerCycle" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="DOF" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="seconds" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="DOFs" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="AverageSolveTime" component="" datatype="double" accesstype="readonly">
<access offset="(0)" dependentloopvar="(l)" reads="1" writes="0"/>
</array>
<funccall linenum="344" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</loop>
</if>
<if linenum="351" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="351" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="356" name="" origname="MGResetTimers" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="&MG_h"/>
</funccall>
<loop linenum="357" loopvar="l" lowerbound="0" upperbound="3 - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rtol" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="l" datatype="int" isConstant="false" accesstype="writeread" reads="7" writes="1"/>
<if linenum="358" conditional="l &gt; 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="358" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="MG_h . levels[l]"/>
<arg paramname="id_c" argname="2"/>
<arg paramname="level_f" argname="MG_h . levels[l - 1]"/>
<arg paramname="id_f" argname="2"/>
<arg paramname="restrictionType" argname="0"/>
</funccall>
<funccall linenum="359" name="" origname="zero_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="MG_h . levels[l]"/>
<arg paramname="id_a" argname="1"/>
</funccall>
<funccall linenum="363" name="" origname="MGSolve" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="&MG_h"/>
<arg paramname="onLevel" argname="l"/>
<arg paramname="u_id" argname="1"/>
<arg paramname="F_id" argname="2"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
<arg paramname="rtol" argname="rtol"/>
</funccall>
</loop>
<funccall linenum="366" name="" origname="richardson_error" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="&MG_h"/>
<arg paramname="levelh" argname="0"/>
<arg paramname="u_id" argname="1"/>
</funccall>
<if linenum="370" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="370" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="371" name="" origname="MGDestroy" module="unknown" flops="unknown">
<arg paramname="all_grids" argname="&MG_h"/>
</funccall>
<funccall linenum="372" name="" origname="destroy_level" module="unknown" flops="unknown">
<arg paramname="level" argname="&level_h"/>
</funccall>
<if linenum="376" conditional="my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="376" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<local name="AverageSolveTime"/>
<nonlocal name="stdout"/>
<nonlocal name="stderr"/>
<nonlocal name="argv"/>
</function>
<function name="mean" adds="1" multiplies="0" divides="1" specials="0">
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sum_level" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ncells_level" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="mean_level" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="337" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="344" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_a" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="sum_level" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sum_block" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(block)" reads="11" writes="0"/>
<access offset="(id_a)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="4" writes="0"/>
</array>
<loop linenum="359" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="360" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="361" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sum_block" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="grid_a" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="367" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="grid_a"/>
<nonlocal name="level"/>
</function>
<function name="norm" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="max_norm" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="288" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="294" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_a" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="max_norm" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block_norm" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(block)" reads="11" writes="0"/>
<access offset="(id_a)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="4" writes="0"/>
</array>
<loop linenum="309" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="310" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="311" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block_norm" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="fabs_grid_ijk" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="grid" component="" datatype="double" accesstype="readwrite">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="0"/>
</array>
<funccall linenum="313" name="" origname="fabs" module="unknown" flops="unknown">
<arg paramname="__x" argname="grid[i + j * jStride + k * kStride]"/>
</funccall>
<if linenum="314" conditional="fabs_grid_ijk &gt; block_norm;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="block_norm" datatype="double" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="fabs_grid_ijk" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
</if>
</loop>
</loop>
</loop>
<if linenum="317" conditional="block_norm &gt; max_norm;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="max_norm" datatype="double" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="block_norm" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
</if>
</loop>
<funccall linenum="319" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="grid"/>
<nonlocal name="level"/>
</function>
<function name="rebuild_operator_blackbox" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="dominant_eigenvalue_of_DinvA" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="colors_in_each_dim" datatype="int" isConstant="false" accesstype="readwrite" reads="3" writes="3"/>
<scalar name="Aii_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sumAbsAij_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dominant_eigenvalue" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="10" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="108" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<if linenum="50" conditional="level -&gt; dim . i &lt; colors_in_each_dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="51" conditional="level -&gt; dim . j &lt; colors_in_each_dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="52" conditional="level -&gt; dim . k &lt; colors_in_each_dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="54" conditional="level -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="colors_in_each_dim" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<funccall linenum="54" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="54" name="" origname="fflush" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
</funccall>
</if>
<funccall linenum="87" name="" origname="zero_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id_a" argname="Aii_id"/>
</funccall>
<funccall linenum="88" name="" origname="zero_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id_a" argname="sumAbsAij_id"/>
</funccall>
<loop linenum="91" loopvar="kcolor" lowerbound="0" upperbound="colors_in_each_dim - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="colors_in_each_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kcolor" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="92" loopvar="jcolor" lowerbound="0" upperbound="colors_in_each_dim - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="colors_in_each_dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jcolor" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="93" loopvar="icolor" lowerbound="0" upperbound="colors_in_each_dim - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="colors_in_each_dim" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="icolor" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="jcolor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kcolor" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="95" name="" origname="color_vector" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id_a" argname="x_id"/>
<arg paramname="colors_in_each_dim" argname="colors_in_each_dim"/>
<arg paramname="icolor" argname="icolor"/>
<arg paramname="jcolor" argname="jcolor"/>
<arg paramname="kcolor" argname="kcolor"/>
</funccall>
<funccall linenum="98" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="x_id"/>
<arg paramname="shape" argname="(stencil_get_shape())"/>
</funccall>
<funccall linenum="98" name="" origname="stencil_get_shape" module="unknown" flops="unknown">
</funccall>
<funccall linenum="99" name="" origname="apply_BCs" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="x_id" argname="x_id"/>
<arg paramname="shape" argname="(stencil_get_shape())"/>
</funccall>
<funccall linenum="99" name="" origname="stencil_get_shape" module="unknown" flops="unknown">
</funccall>
<loop linenum="103" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Aii_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sumAbsAij_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="7" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="7" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="7" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(6)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(7)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(8)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(9)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(Aii_id)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(block)" reads="17" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="10" writes="0"/>
<access offset="(sumAbsAij_id)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(x_id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<loop linenum="126" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="127" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="128" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="1" multiplies="6" divides="0" specials="0">
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="44" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="44" writes="0"/>
<scalar name="h2inv" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Ax" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="x" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="8" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(2,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,2,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,2)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,0)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(-1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-2,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-2,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,-2)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,0)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,-1)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="alpha" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="beta_i" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="beta_j" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="beta_k" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="Aii" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="sumAbsAij" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<funccall linenum="132" name="" origname="fabs" module="unknown" flops="unknown">
<arg paramname="__x" argname="(1.0 - x[i + j * jStride + k * kStride]) * Ax"/>
</funccall>
</loop>
</loop>
</loop>
</loop>
</loop>
</loop>
</loop>
<loop linenum="141" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Aii_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="sumAbsAij_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dominant_eigenvalue" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="block_eigenvalue" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(Aii_id)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(block)" reads="12" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="5" writes="0"/>
<access offset="(sumAbsAij_id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<loop linenum="158" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="159" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="160" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block_eigenvalue" datatype="double" isConstant="false" accesstype="readwrite" reads="1" writes="1"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="Di" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="Aii" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="3" writes="1"/>
<access offset="(ijk)" dependentloopvar="()" reads="4" writes="0"/>
</array>
<array name="sumAbsAij" component="" datatype="double" accesstype="readwrite">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(ijk)" dependentloopvar="()" reads="2" writes="2"/>
</array>
<if linenum="164" conditional="Aii[ijk] == 0.0;" adds="1" multiplies="1" divides="0" specials="0">
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="h2inv" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(box)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<array name="Aii" component="" datatype="double" accesstype="writeonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
</array>
<funccall linenum="165" name="" origname="printf" module="unknown" flops="unknown">
</funccall>
</if>
<if linenum="170" conditional="Di &gt; block_eigenvalue;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="175" conditional="Aii[ijk] &gt;= 1.5 * sumAbsAij[ijk];" adds="0" multiplies="0" divides="0" specials="0">
</if>
</loop>
</loop>
</loop>
<if linenum="182" conditional="block_eigenvalue &gt; dominant_eigenvalue;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dominant_eigenvalue" datatype="double" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="block_eigenvalue" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
</if>
</loop>
<if linenum="187" conditional="level -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="187" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
</if>
<local name="x"/>
<local name="alpha"/>
<local name="beta_i"/>
<local name="beta_j"/>
<local name="beta_k"/>
<local name="Aii"/>
<local name="sumAbsAij"/>
<local name="Aii"/>
<local name="sumAbsAij"/>
<nonlocal name="stdout"/>
<nonlocal name="level"/>
</function>
<function name="rebuild_operator" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="147" conditional="fromLevel !=((void *)0);" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="149" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="level"/>
<arg paramname="id_c" argname="9"/>
<arg paramname="level_f" argname="fromLevel"/>
<arg paramname="id_f" argname="9"/>
<arg paramname="restrictionType" argname="0"/>
</funccall>
<funccall linenum="151" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="level"/>
<arg paramname="id_c" argname="6"/>
<arg paramname="level_f" argname="fromLevel"/>
<arg paramname="id_f" argname="6"/>
<arg paramname="restrictionType" argname="1"/>
</funccall>
<funccall linenum="152" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="level"/>
<arg paramname="id_c" argname="7"/>
<arg paramname="level_f" argname="fromLevel"/>
<arg paramname="id_f" argname="7"/>
<arg paramname="restrictionType" argname="2"/>
</funccall>
<funccall linenum="153" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="level"/>
<arg paramname="id_c" argname="8"/>
<arg paramname="level_f" argname="fromLevel"/>
<arg paramname="id_f" argname="8"/>
<arg paramname="restrictionType" argname="3"/>
</funccall>
</if>
<funccall linenum="157" name="" origname="extrapolate_betas" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
</funccall>
<funccall linenum="162" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="9"/>
<arg paramname="shape" argname="0"/>
</funccall>
<funccall linenum="164" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="6"/>
<arg paramname="shape" argname="0"/>
</funccall>
<funccall linenum="165" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="7"/>
<arg paramname="shape" argname="0"/>
</funccall>
<funccall linenum="166" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="8"/>
<arg paramname="shape" argname="0"/>
</funccall>
<funccall linenum="169" name="" origname="rebuild_operator_blackbox" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="a" argname="a"/>
<arg paramname="b" argname="b"/>
<arg paramname="colors_in_each_dim" argname="4"/>
</funccall>
<funccall linenum="172" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="5"/>
<arg paramname="shape" argname="0"/>
</funccall>
<nonlocal name="level"/>
<nonlocal name="fromLevel"/>
</function>
<function name="residual" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="residual" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="10" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="106" writes="0"/>
<funccall linenum="11" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="x_id"/>
<arg paramname="shape" argname="(stencil_get_shape())"/>
</funccall>
<funccall linenum="11" name="" origname="stencil_get_shape" module="unknown" flops="unknown">
</funccall>
<funccall linenum="12" name="" origname="apply_BCs" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="x_id" argname="x_id"/>
<arg paramname="shape" argname="(stencil_get_shape())"/>
</funccall>
<funccall linenum="12" name="" origname="stencil_get_shape" module="unknown" flops="unknown">
</funccall>
<funccall linenum="15" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="19" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="res_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rhs_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="7" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="7" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="7" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(6)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(7)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(8)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(9)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(block)" reads="17" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="10" writes="0"/>
<access offset="(res_id)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(rhs_id)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(x_id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<loop linenum="42" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="43" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="44" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="2" multiplies="4" divides="0" specials="0">
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="44" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="44" writes="0"/>
<scalar name="h2inv" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="Ax" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="x" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="7" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(2,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,2,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,2)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,0)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(-1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-2,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-2,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,-2)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,0)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,-1)" dependentloopvar="(k,j,i)" reads="6" writes="0"/>
<access offset="(1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="rhs" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="alpha" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="beta_i" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="beta_j" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,-1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="beta_k" component="" datatype="const double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,1)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(-1,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
<access offset="(0,-1,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="res" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="50" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="x"/>
<local name="rhs"/>
<local name="alpha"/>
<local name="beta_i"/>
<local name="beta_j"/>
<local name="beta_k"/>
<local name="res"/>
<nonlocal name="level"/>
</function>
<function name="restriction_pc_block" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="write_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_ijk" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<if linenum="29" conditional="block -&gt; read . box &gt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="id_f" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level_f" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="4" writes="0"/>
<access offset="(id_f)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<if linenum="34" conditional="block -&gt; write . box &gt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level_c" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="4" writes="0"/>
<access offset="(id_c)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<loop linenum="49" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="50" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jj" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="51" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="5" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ii" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(1,1,1)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
<loop linenum="60" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="61" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jj" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="62" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ii" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(0,1,1)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
<loop linenum="71" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="72" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jj" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="73" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ii" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(1,0,1)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(0,0,1)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
<loop linenum="82" loopvar="k" lowerbound="0" upperbound="dim_k - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="83" loopvar="j" lowerbound="0" upperbound="dim_j - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jj" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<loop linenum="84" loopvar="i" lowerbound="0" upperbound="dim_i - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="dim_i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="read_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="read_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="write_kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ii" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="read" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(1,0,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(1,1,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
<access offset="(0,1,0)" dependentloopvar="(2 * k,2 * j,2 * i)" reads="1" writes="0"/>
</array>
<array name="write" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
<local name="read"/>
<local name="write"/>
<nonlocal name="level_c"/>
<nonlocal name="level_f"/>
<nonlocal name="block"/>
</function>
<function name="restriction" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeCommunicationStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="tag" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restriction_total" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level_f" component="" datatype="level_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<funccall linenum="105" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<if linenum="177" conditional="level_f -&gt; restriction[restrictionType] . num_blocks[1] &gt; 0;" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="_timeEnd" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="restriction_local" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level_f" component="" datatype="level_type" accesstype="readonly">
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<funccall linenum="178" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="180" loopvar="buffer" lowerbound="0" upperbound="level_f -> restriction[restrictionType] . num_blocks[1] - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_f" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="restrictionType" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="buffer" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<array name="level_f" component="" datatype="level_type" accesstype="readonly">
<access offset="(0,1,restrictionType)" dependentloopvar="(buffer,,)" reads="0" writes="0"/>
<access offset="(restrictionType)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<funccall linenum="181" name="" origname="restriction_pc_block" module="unknown" flops="unknown">
<arg paramname="level_c" argname="level_c"/>
<arg paramname="id_c" argname="id_c"/>
<arg paramname="level_f" argname="level_f"/>
<arg paramname="id_f" argname="id_f"/>
<arg paramname="block" argname="&level_f -> restriction[restrictionType] . blocks[1][buffer]"/>
<arg paramname="restrictionType" argname="restrictionType"/>
</funccall>
</loop>
<funccall linenum="183" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
</if>
<funccall linenum="211" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<nonlocal name="level_c"/>
<nonlocal name="level_f"/>
</function>
<function name="richardson_error" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="my_rank" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="levelh" datatype="int" isConstant="false" accesstype="readonly" reads="8" writes="0"/>
<scalar name="u_id" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readwrite">
<access offset="(levelh+1)" dependentloopvar="()" reads="0" writes="0"/>
<access offset="(levelh+2)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<funccall linenum="1076" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="all_grids -> levels[levelh + 1]"/>
<arg paramname="id_c" argname="0"/>
<arg paramname="level_f" argname="all_grids -> levels[levelh]"/>
<arg paramname="id_f" argname="u_id"/>
<arg paramname="restrictionType" argname="0"/>
</funccall>
<funccall linenum="1077" name="" origname="restriction" module="unknown" flops="unknown">
<arg paramname="level_c" argname="all_grids -> levels[levelh + 2]"/>
<arg paramname="id_c" argname="0"/>
<arg paramname="level_f" argname="all_grids -> levels[levelh + 1]"/>
<arg paramname="id_f" argname="u_id"/>
<arg paramname="restrictionType" argname="0"/>
</funccall>
<funccall linenum="1078" name="" origname="add_vectors" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[levelh + 1]"/>
<arg paramname="id_c" argname="0"/>
<arg paramname="scale_a" argname="1.0"/>
<arg paramname="id_a" argname="u_id"/>
<arg paramname="scale_b" argname="- 1.0"/>
<arg paramname="id_b" argname="0"/>
</funccall>
<funccall linenum="1079" name="" origname="add_vectors" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[levelh + 2]"/>
<arg paramname="id_c" argname="0"/>
<arg paramname="scale_a" argname="1.0"/>
<arg paramname="id_a" argname="u_id"/>
<arg paramname="scale_b" argname="- 1.0"/>
<arg paramname="id_b" argname="0"/>
</funccall>
<funccall linenum="1080" name="" origname="norm" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[levelh + 1]"/>
<arg paramname="id_a" argname="0"/>
</funccall>
<funccall linenum="1081" name="" origname="norm" module="unknown" flops="unknown">
<arg paramname="level" argname="all_grids -> levels[levelh + 2]"/>
<arg paramname="id_a" argname="0"/>
</funccall>
<if linenum="1083" conditional="all_grids -&gt; my_rank == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="levelh" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_u2h_minus_uh" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="all_grids" component="" datatype="mg_type" accesstype="readonly">
<access offset="(levelh)" dependentloopvar="()" reads="0" writes="0"/>
</array>
<funccall linenum="1083" name="" origname="fprintf" module="unknown" flops="unknown">
</funccall>
<funccall linenum="1083" name="" origname="fflush" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
</funccall>
</if>
<if linenum="1085" conditional="all_grids -&gt; my_rank == 0;" adds="0" multiplies="0" divides="2" specials="2">
<scalar name="norm_of_u2h_minus_uh" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="norm_of_u4h_minus_u2h" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="1085" name="" origname="fflush" module="unknown" flops="unknown">
<arg paramname="__stream" argname="stdout"/>
</funccall>
</if>
<nonlocal name="stdout"/>
<nonlocal name="all_grids"/>
</function>
<function name="scale_vector" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<funccall linenum="205" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="210" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_a" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(block)" reads="12" writes="0"/>
<access offset="(id_a)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(id_c)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="5" writes="0"/>
</array>
<loop linenum="225" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="226" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="227" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="0" multiplies="1" divides="0" specials="0">
<scalar name="scale_a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="grid_a" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="grid_c" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="232" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="grid_c"/>
<local name="grid_a"/>
<nonlocal name="level"/>
</function>
<function name="shift_vector" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<funccall linenum="387" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="391" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_c" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_a" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(block)" reads="12" writes="0"/>
<access offset="(id_a)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(id_c)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="5" writes="0"/>
</array>
<loop linenum="407" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="408" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="409" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="shift_a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="grid_a" component="" datatype="double" accesstype="readonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="1" writes="0"/>
</array>
<array name="grid_c" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="414" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="grid_c"/>
<local name="grid_a"/>
<nonlocal name="level"/>
</function>
<function name="smooth" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="11" writes="0"/>
<loop linenum="26" loopvar="s" lowerbound="0" upperbound="2 * 3 - 1" stride="1" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="smooth" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="s" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<if linenum="30" conditional="(s & 1) == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<funccall linenum="30" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="x_id"/>
<arg paramname="shape" argname="(stencil_get_shape())"/>
</funccall>
<funccall linenum="30" name="" origname="stencil_get_shape" module="unknown" flops="unknown">
</funccall>
<funccall linenum="30" name="" origname="apply_BCs" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="x_id" argname="x_id"/>
<arg paramname="shape" argname="(stencil_get_shape())"/>
</funccall>
<funccall linenum="30" name="" origname="stencil_get_shape" module="unknown" flops="unknown">
</funccall>
</if>
<else iflinenum="30" adds="0" multiplies="0" divides="0" specials="0">
<funccall linenum="31" name="" origname="exchange_boundary" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="id" argname="0"/>
<arg paramname="shape" argname="(stencil_get_shape())"/>
</funccall>
<funccall linenum="31" name="" origname="stencil_get_shape" module="unknown" flops="unknown">
</funccall>
<funccall linenum="31" name="" origname="apply_BCs" module="unknown" flops="unknown">
<arg paramname="level" argname="level"/>
<arg paramname="x_id" argname="0"/>
<arg paramname="shape" argname="(stencil_get_shape())"/>
</funccall>
<funccall linenum="31" name="" origname="stencil_get_shape" module="unknown" flops="unknown">
</funccall>
</else>
<funccall linenum="37" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="41" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="h" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="box_ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rhs_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="s" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="6" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="6" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="6" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(5)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(6)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(7)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(8)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(9)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="(block)" reads="18" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="11" writes="0"/>
<access offset="(rhs_id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<if linenum="68" conditional="(s & 1) == 0;" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(box)" dependentloopvar="()" reads="2" writes="0"/>
<access offset="(x_id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</if>
<else iflinenum="68" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="x_id" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="2" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(box)" dependentloopvar="()" reads="2" writes="0"/>
<access offset="(x_id)" dependentloopvar="()" reads="1" writes="0"/>
</array>
</else>
<loop linenum="109" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="110" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="111" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="ilo" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="4" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="color000" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<if linenum="113" conditional="(i ^ j ^ k ^ color000 ^ 1) & 1;" adds="3" multiplies="5" divides="0" specials="0">
<scalar name="a" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="b" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="h2inv" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="43" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="43" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="108" writes="0"/>
<scalar name="Ax" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="rhs" component="" datatype="const double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="alpha" component="" datatype="const double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="beta_i" component="" datatype="const double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1+-jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1+-kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-kStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="beta_j" component="" datatype="const double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride+-kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-kStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="beta_k" component="" datatype="const double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride+-jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-jStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="Dinv" component="" datatype="const double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="x_n" component="" datatype="const double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="8" writes="0"/>
<access offset="(ijk+1)" dependentloopvar="()" reads="6" writes="0"/>
<access offset="(ijk+1+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1+-jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+1+-kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+2*jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+2*kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride)" dependentloopvar="()" reads="6" writes="0"/>
<access offset="(ijk+jStride+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+jStride+-kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride)" dependentloopvar="()" reads="6" writes="0"/>
<access offset="(ijk+kStride+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+kStride+-jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-1)" dependentloopvar="()" reads="6" writes="0"/>
<access offset="(ijk+-1+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-1+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-1+-jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-1+-kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-2*jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-2*kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-jStride)" dependentloopvar="()" reads="6" writes="0"/>
<access offset="(ijk+-jStride+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-jStride+kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-jStride+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-jStride+-kStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-kStride)" dependentloopvar="()" reads="6" writes="0"/>
<access offset="(ijk+-kStride+1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-kStride+jStride)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-kStride+-1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(ijk+-kStride+-jStride)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="x_np1" component="" datatype="double" accesstype="writeonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</if>
<else iflinenum="113" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="x_n" component="" datatype="const double" accesstype="readonly">
<access offset="(ijk)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<array name="x_np1" component="" datatype="double" accesstype="writeonly">
<access offset="(ijk)" dependentloopvar="()" reads="0" writes="1"/>
</array>
</else>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="130" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
</loop>
<local name="rhs"/>
<local name="alpha"/>
<local name="beta_i"/>
<local name="beta_j"/>
<local name="beta_k"/>
<local name="Dinv"/>
<local name="x_n"/>
<local name="x_np1"/>
<nonlocal name="level"/>
</function>
<function name="stencil_get_radius" adds="0" multiplies="0" divides="0" specials="0">
</function>
<function name="stencil_get_shape" adds="0" multiplies="0" divides="0" specials="0">
</function>
<function name="zero_vector" adds="1" multiplies="0" divides="0" specials="0">
<scalar name="blas1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="_timeStart" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="const int" isConstant="true" accesstype="readonly" reads="5" writes="0"/>
<scalar name="ijk" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="8" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<loop linenum="12" loopvar="block" lowerbound="0" upperbound="level -> num_my_blocks - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="num_my_blocks" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="id_a" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="block" datatype="int" isConstant="false" accesstype="writeread" reads="9" writes="1"/>
<scalar name="ilo" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="jlo" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="klo" datatype="int" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="ihi" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jhi" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="khi" datatype="int" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="const int" isConstant="true" accesstype="readonly" reads="7" writes="0"/>
<scalar name="dim" datatype="const int" isConstant="true" accesstype="readonly" reads="3" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="box" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="dim" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ghosts" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<array name="level" component="" datatype="level_type" accesstype="readonly">
<access offset="(0)" dependentloopvar="(block)" reads="12" writes="0"/>
<access offset="(id_a)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(0)" dependentloopvar="()" reads="5" writes="0"/>
</array>
<if linenum="27" conditional="ilo &lt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="28" conditional="jlo &lt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="29" conditional="klo &lt;= 0;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="30" conditional="ihi &gt;= dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="31" conditional="jhi &gt;= dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<if linenum="32" conditional="khi &gt;= dim;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<loop linenum="36" loopvar="k" lowerbound="klo" upperbound="khi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="klo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="khi" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="37" loopvar="j" lowerbound="jlo" upperbound="jhi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="jlo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jhi" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<loop linenum="38" loopvar="i" lowerbound="ilo" upperbound="ihi - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="ilo" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="ihi" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="i" datatype="int" isConstant="false" accesstype="writeread" reads="3" writes="1"/>
<scalar name="j" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="jStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="kStride" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<array name="grid" component="" datatype="double" accesstype="writeonly">
<access offset="(0,0,0)" dependentloopvar="(k,j,i)" reads="0" writes="1"/>
</array>
</loop>
</loop>
</loop>
</loop>
<funccall linenum="43" name="" origname="getTime" module="unknown" flops="unknown">
</funccall>
<local name="grid"/>
<nonlocal name="level"/>
</function>
</program>
