<program>
<function name="CG" adds="4" multiplies="0" divides="0" specials="1">
<scalar name="isDotProductOptimized" datatype="bool" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="isWaxpbyOptimized" datatype="bool" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="A" datatype="const ::SparseMatrix&" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="data" datatype="::CGData&" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<scalar name="b" datatype="const ::Vector&" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="x" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="normr" datatype="double &" isConstant="false" accesstype="writeread" reads="3" writes="2"/>
<scalar name="normr0" datatype="double &" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="t_begin" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t0" datatype="double" isConstant="false" accesstype="writeread" reads="3" writes="3"/>
<scalar name="t1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="t2" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="t3" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="t4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="t5" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="r" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="p" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="Ap" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<array name="times" component="" datatype="double" accesstype="readonly">
<access offset="(0)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(1)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(2)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(3)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(4)" dependentloopvar="()" reads="1" writes="0"/>
<access offset="(5)" dependentloopvar="()" reads="1" writes="0"/>
</array>
<funccall linenum="63" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="86" name="" origname="CopyVector" module="unknown" flops="unknown">
<arg paramname="v" argname="x"/>
<arg paramname="w" argname="p"/>
</funccall>
<funccall linenum="87" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="87" name="" origname="ComputeSPMV" module="unknown" flops="unknown">
<arg paramname="A" argname="A"/>
<arg paramname="x" argname="p"/>
<arg paramname="y" argname="Ap"/>
</funccall>
<funccall linenum="87" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="88" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="88" name="" origname="ComputeWAXPBY" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="alpha" argname="1.0"/>
<arg paramname="x" argname="b"/>
<arg paramname="beta" argname="- 1.0"/>
<arg paramname="y" argname="Ap"/>
<arg paramname="w" argname="r"/>
<arg paramname="isOptimized" argname="A . isWaxpbyOptimized"/>
</funccall>
<funccall linenum="88" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="89" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="89" name="" origname="ComputeDotProduct" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="x" argname="r"/>
<arg paramname="y" argname="r"/>
<arg paramname="result" argname="normr"/>
<arg paramname="time_allreduce" argname="t4"/>
<arg paramname="isOptimized" argname="A . isDotProductOptimized"/>
</funccall>
<funccall linenum="89" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<loop linenum="100" loopvar="k" lowerbound="1" upperbound="max_iter" stride="1" adds="5" multiplies="0" divides="2" specials="1">
<scalar name="isDotProductOptimized" datatype="bool" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="isWaxpbyOptimized" datatype="bool" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="A" datatype="const ::SparseMatrix&" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="x" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="max_iter" datatype="const int" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="tolerance" datatype="const double" isConstant="true" accesstype="readonly" reads="1" writes="0"/>
<scalar name="niters" datatype="int &" isConstant="false" accesstype="writeonly" reads="0" writes="1"/>
<scalar name="normr" datatype="double &" isConstant="false" accesstype="readwrite" reads="3" writes="1"/>
<scalar name="normr0" datatype="double &" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="doPreconditioning" datatype="bool" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="rtz" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="alpha" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="1"/>
<scalar name="pAp" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="t0" datatype="double" isConstant="false" accesstype="writeread" reads="5" writes="5"/>
<scalar name="t1" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="t2" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t3" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t4" datatype="double" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="t5" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="r" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="6" writes="0"/>
<scalar name="z" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="p" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="Ap" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="k" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<if linenum="101" conditional="normr / normr0 &lt;= tolerance;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="102" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<if linenum="103" conditional="doPreconditioning;" adds="0" multiplies="0" divides="0" specials="0">
</if>
<funccall linenum="104" name="" origname="ComputeMG" module="unknown" flops="unknown">
<arg paramname="A" argname="A"/>
<arg paramname="r" argname="r"/>
<arg paramname="x" argname="z"/>
</funccall>
<funccall linenum="106" name="" origname="CopyVector" module="unknown" flops="unknown">
<arg paramname="v" argname="r"/>
<arg paramname="w" argname="z"/>
</funccall>
<funccall linenum="107" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<if linenum="109" conditional="k == 1;" adds="2" multiplies="0" divides="0" specials="0">
<scalar name="isDotProductOptimized" datatype="bool" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="isWaxpbyOptimized" datatype="bool" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="A" datatype="const ::SparseMatrix&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="rtz" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t0" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="2"/>
<scalar name="t1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t2" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t4" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="r" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="z" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="p" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<funccall linenum="110" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="110" name="" origname="ComputeWAXPBY" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="alpha" argname="1.0"/>
<arg paramname="x" argname="z"/>
<arg paramname="beta" argname="0.0"/>
<arg paramname="y" argname="z"/>
<arg paramname="w" argname="p"/>
<arg paramname="isOptimized" argname="A . isWaxpbyOptimized"/>
</funccall>
<funccall linenum="110" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="111" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="111" name="" origname="ComputeDotProduct" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="x" argname="r"/>
<arg paramname="y" argname="z"/>
<arg paramname="result" argname="rtz"/>
<arg paramname="time_allreduce" argname="t4"/>
<arg paramname="isOptimized" argname="A . isDotProductOptimized"/>
</funccall>
<funccall linenum="111" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
</if>
<else iflinenum="109" adds="2" multiplies="0" divides="1" specials="0">
<scalar name="isDotProductOptimized" datatype="bool" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="isWaxpbyOptimized" datatype="bool" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="A" datatype="const ::SparseMatrix&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="rtz" datatype="double" isConstant="false" accesstype="readonly" reads="3" writes="0"/>
<scalar name="oldrtz" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="beta" datatype="double" isConstant="false" accesstype="writeread" reads="1" writes="1"/>
<scalar name="t0" datatype="double" isConstant="false" accesstype="writeread" reads="2" writes="2"/>
<scalar name="t1" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t2" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="t4" datatype="double" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="r" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<scalar name="z" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="p" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<funccall linenum="114" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="114" name="" origname="ComputeDotProduct" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="x" argname="r"/>
<arg paramname="y" argname="z"/>
<arg paramname="result" argname="rtz"/>
<arg paramname="time_allreduce" argname="t4"/>
<arg paramname="isOptimized" argname="A . isDotProductOptimized"/>
</funccall>
<funccall linenum="114" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="116" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="116" name="" origname="ComputeWAXPBY" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="alpha" argname="1.0"/>
<arg paramname="x" argname="z"/>
<arg paramname="beta" argname="beta"/>
<arg paramname="y" argname="p"/>
<arg paramname="w" argname="p"/>
<arg paramname="isOptimized" argname="A . isWaxpbyOptimized"/>
</funccall>
<funccall linenum="116" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
</else>
<funccall linenum="119" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="119" name="" origname="ComputeSPMV" module="unknown" flops="unknown">
<arg paramname="A" argname="A"/>
<arg paramname="x" argname="p"/>
<arg paramname="y" argname="Ap"/>
</funccall>
<funccall linenum="119" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="120" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="120" name="" origname="ComputeDotProduct" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="x" argname="p"/>
<arg paramname="y" argname="Ap"/>
<arg paramname="result" argname="pAp"/>
<arg paramname="time_allreduce" argname="t4"/>
<arg paramname="isOptimized" argname="A . isDotProductOptimized"/>
</funccall>
<funccall linenum="120" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="122" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="122" name="" origname="ComputeWAXPBY" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="alpha" argname="1.0"/>
<arg paramname="x" argname="x"/>
<arg paramname="beta" argname="alpha"/>
<arg paramname="y" argname="p"/>
<arg paramname="w" argname="x"/>
<arg paramname="isOptimized" argname="A . isWaxpbyOptimized"/>
</funccall>
<funccall linenum="123" name="" origname="ComputeWAXPBY" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="alpha" argname="1.0"/>
<arg paramname="x" argname="r"/>
<arg paramname="beta" argname="-alpha"/>
<arg paramname="y" argname="Ap"/>
<arg paramname="w" argname="r"/>
<arg paramname="isOptimized" argname="A . isWaxpbyOptimized"/>
</funccall>
<funccall linenum="123" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="124" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<funccall linenum="124" name="" origname="ComputeDotProduct" module="unknown" flops="unknown">
<arg paramname="n" argname="nrow"/>
<arg paramname="x" argname="r"/>
<arg paramname="y" argname="r"/>
<arg paramname="result" argname="normr"/>
<arg paramname="time_allreduce" argname="t4"/>
<arg paramname="isOptimized" argname="A . isDotProductOptimized"/>
</funccall>
<funccall linenum="124" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
</loop>
<funccall linenum="141" name="" origname="mytimer" module="unknown" flops="unknown">
</funccall>
<nonlocal name="times"/>
</function>
<function name="CopyVector" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="v" datatype="const ::Vector&" isConstant="false" accesstype="readonly" reads="2" writes="0"/>
<scalar name="w" datatype="::Vector&" isConstant="false" accesstype="readonly" reads="1" writes="0"/>
<loop linenum="98" loopvar="i" lowerbound="0" upperbound="localLength - 1" stride="1" adds="0" multiplies="0" divides="0" specials="0">
<scalar name="i" datatype="int" isConstant="false" accesstype="readonly" reads="4" writes="0"/>
<array name="vv" component="" datatype="double" accesstype="readonly">
<access offset="(0)" dependentloopvar="(i)" reads="1" writes="0"/>
</array>
<array name="wv" component="" datatype="double" accesstype="writeonly">
<access offset="(0)" dependentloopvar="(i)" reads="0" writes="1"/>
</array>
</loop>
<local name="vv"/>
<local name="wv"/>
</function>
</program>
